{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { GET_USER_PROJECTS, CREATE_USER_PROJECT, DELETE_USER_PROJECT, ADD_USER_IN_PROJECT, putDeletedUserProject, putGottenUserProjects, putCreatedUserProject } from './actions';\nimport fetchWithAuth from '../fetchWithAuth';\nimport * as config from '../config';\nimport { addNotify } from '../notify/actions'; // Workers\n\nfunction* workerGetProjects(action) {\n  const response = yield fetchWithAuth(config.URL_PROJECT_API);\n  if (response) yield put(putGottenUserProjects(response));\n}\n\nfunction* workerCreateProjects(action) {\n  const response = yield fetchWithAuth(config.URL_PROJECT_API, 'POST', action.payload);\n  ;\n  if (response) yield put(putCreatedUserProject(response.data));\n}\n\nfunction* workerDeleteProjects(action) {\n  const response = yield fetchWithAuth(`${config.URL_PROJECT_API}/${action.payload}`, 'DELETE');\n  if (response) yield put(putDeletedUserProject(response.data));\n}\n\nfunction* workerAddUserInProject(action) {\n  const response = yield fetchWithAuth(`${config.URL_PROJECT_API}/users`, 'POST', action.payload);\n  console.log(response);\n  if (response && response.success === true) yield console.log(put);else yield addNotify(addNotify({\n    message: response.message\n  }));\n} // Watchers \n\n\nexport function* watchGetProjects() {\n  yield takeEvery(GET_USER_PROJECTS, workerGetProjects);\n}\nexport function* watchCreateProjects() {\n  yield takeEvery(CREATE_USER_PROJECT, workerCreateProjects);\n}\nexport function* watchDeleteProjects() {\n  yield takeEvery(DELETE_USER_PROJECT, workerDeleteProjects);\n}\nexport function* watchAddUserInProject() {\n  yield takeEvery(ADD_USER_IN_PROJECT, workerAddUserInProject);\n}","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/projects/sagas.js"],"names":["takeEvery","put","call","GET_USER_PROJECTS","CREATE_USER_PROJECT","DELETE_USER_PROJECT","ADD_USER_IN_PROJECT","putDeletedUserProject","putGottenUserProjects","putCreatedUserProject","fetchWithAuth","config","addNotify","workerGetProjects","action","response","URL_PROJECT_API","workerCreateProjects","payload","data","workerDeleteProjects","workerAddUserInProject","console","log","success","message","watchGetProjects","watchCreateProjects","watchDeleteProjects","watchAddUserInProject"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,SACEC,iBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,mBAJF,EAKEC,qBALF,EAMEC,qBANF,EAOEC,qBAPF,QAQO,WARP;AAUA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,mBAA1B,C,CAGA;;AAEA,UAAUC,iBAAV,CAA4BC,MAA5B,EAAoC;AAEnC,QAAMC,QAAQ,GAAG,MAAML,aAAa,CAACC,MAAM,CAACK,eAAR,CAApC;AAEA,MAAID,QAAJ,EACG,MAAMd,GAAG,CAACO,qBAAqB,CAACO,QAAD,CAAtB,CAAT;AACH;;AAED,UAAUE,oBAAV,CAA+BH,MAA/B,EAAuC;AAEtC,QAAMC,QAAQ,GAAG,MAAML,aAAa,CAACC,MAAM,CAACK,eAAR,EAAyB,MAAzB,EAAiCF,MAAM,CAACI,OAAxC,CAApC;AAAqF;AAErF,MAAIH,QAAJ,EACG,MAAMd,GAAG,CAACQ,qBAAqB,CAACM,QAAQ,CAACI,IAAV,CAAtB,CAAT;AACH;;AAED,UAAUC,oBAAV,CAA+BN,MAA/B,EAAuC;AAEtC,QAAMC,QAAQ,GAAG,MAAML,aAAa,CAAE,GAAEC,MAAM,CAACK,eAAgB,IAAGF,MAAM,CAACI,OAAQ,EAA7C,EAAgD,QAAhD,CAApC;AAEA,MAAIH,QAAJ,EACG,MAAMd,GAAG,CAACM,qBAAqB,CAACQ,QAAQ,CAACI,IAAV,CAAtB,CAAT;AACH;;AAED,UAAUE,sBAAV,CAAiCP,MAAjC,EAAyC;AACvC,QAAMC,QAAQ,GAAG,MAAML,aAAa,CAAE,GAAEC,MAAM,CAACK,eAAgB,QAA3B,EAAoC,MAApC,EAA4CF,MAAM,CAACI,OAAnD,CAApC;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACD,MAAIA,QAAQ,IAAIA,QAAQ,CAACS,OAAT,KAAqB,IAArC,EACG,MAAMF,OAAO,CAACC,GAAR,CAAYtB,GAAZ,CAAN,CADH,KAGG,MAAMW,SAAS,CAACA,SAAS,CAAC;AAACa,IAAAA,OAAO,EAAEV,QAAQ,CAACU;AAAnB,GAAD,CAAV,CAAf;AACH,C,CAED;;;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,QAAM1B,SAAS,CAACG,iBAAD,EAAoBU,iBAApB,CAAf;AACD;AAED,OAAO,UAAUc,mBAAV,GAAgC;AACrC,QAAM3B,SAAS,CAACI,mBAAD,EAAsBa,oBAAtB,CAAf;AACD;AAED,OAAO,UAAUW,mBAAV,GAAgC;AACrC,QAAM5B,SAAS,CAACK,mBAAD,EAAsBe,oBAAtB,CAAf;AACD;AAED,OAAO,UAAUS,qBAAV,GAAkC;AACvC,QAAM7B,SAAS,CAACM,mBAAD,EAAsBe,sBAAtB,CAAf;AACD","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects';\r\nimport {\r\n  GET_USER_PROJECTS,\r\n  CREATE_USER_PROJECT,\r\n  DELETE_USER_PROJECT,\r\n  ADD_USER_IN_PROJECT,\r\n  putDeletedUserProject,\r\n  putGottenUserProjects,\r\n  putCreatedUserProject\r\n} from './actions';\r\n\r\nimport fetchWithAuth from '../fetchWithAuth';\r\nimport * as config from '../config';\r\nimport { addNotify } from '../notify/actions';\r\n\r\n\r\n// Workers\r\n\r\nfunction* workerGetProjects(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(config.URL_PROJECT_API);\r\n  \r\n\tif (response) \t\r\n    yield put(putGottenUserProjects(response));\r\n}\r\n\r\nfunction* workerCreateProjects(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(config.URL_PROJECT_API, 'POST', action.payload);;\r\n  \r\n\tif (response) \t\r\n    yield put(putCreatedUserProject(response.data));\r\n}\r\n\r\nfunction* workerDeleteProjects(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(`${config.URL_PROJECT_API}/${action.payload}`, 'DELETE');\r\n  \r\n\tif (response) \t\r\n    yield put(putDeletedUserProject(response.data));\r\n}\r\n\r\nfunction* workerAddUserInProject(action) {\r\n  const response = yield fetchWithAuth(`${config.URL_PROJECT_API}/users`, 'POST', action.payload);\r\n  \r\n  console.log(response);\r\n\tif (response && response.success === true) \t\r\n    yield console.log(put);\r\n  else \r\n    yield addNotify(addNotify({message: response.message}));\r\n}\r\n\r\n// Watchers \r\n\r\nexport function* watchGetProjects() {\r\n  yield takeEvery(GET_USER_PROJECTS, workerGetProjects);\r\n}\r\n\r\nexport function* watchCreateProjects() {\r\n  yield takeEvery(CREATE_USER_PROJECT, workerCreateProjects);\r\n}\r\n\r\nexport function* watchDeleteProjects() {\r\n  yield takeEvery(DELETE_USER_PROJECT, workerDeleteProjects);\r\n}\r\n\r\nexport function* watchAddUserInProject() {\r\n  yield takeEvery(ADD_USER_IN_PROJECT, workerAddUserInProject);\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}