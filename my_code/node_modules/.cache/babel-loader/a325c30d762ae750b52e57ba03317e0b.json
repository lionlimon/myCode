{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\limon\\\\Desktop\\\\my projects\\\\myCode\\\\myCode.React\\\\my_code\\\\src\\\\routs\\\\PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({\n  component: Component,\n  store,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => 'auth' in store.getState() && store.getState().auth.success === true ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }\n}));\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/routs/PrivateRoute.jsx"],"names":["React","Route","Redirect","PrivateRoute","component","Component","store","rest","props","getState","auth","success"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,KAAxB;AAA+B,KAAGC;AAAlC,CAAD,kBACnB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IACX,UAAUF,KAAK,CAACG,QAAN,EAAV,IAA8BH,KAAK,CAACG,QAAN,GAAiBC,IAAjB,CAAsBC,OAAtB,KAAkC,IADjD,gBAEX,oBAAC,SAAD,oBAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFW,gBAGX,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAYA,eAAeL,YAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nconst PrivateRoute = ({ component: Component, store, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      'auth' in store.getState() && store.getState().auth.success === true)\r\n        ? <Component {...props} />\r\n        : <Redirect to=\"/auth\" />\r\n    }\r\n  />\r\n);\r\n\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}