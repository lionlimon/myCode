{"ast":null,"code":"import { PUT_GOTTEN_USER_PROJECTS, PUT_GOTTEN_PROJECT_BY_ID, PUT_GOTTEN_OTHER_PROJECTS, PUT_CREATED_USER_PROJECT, PUT_UPDATED_USER_PROJECT, PUT_DELETED_USER_PROJECT, PUT_ADDED_USER_IN_PROJECT, PUT_DELETED_USER_IN_PROJECT, PUT_ADDED_COMPONENT_IN_PROJECT, PUT_DELETED_COMPONENT_IN_PROJECT, PUT_SNIPPETS, PUT_CREATED_SNIPPETS, PUT_GOTTEN_COMPONENTS, PUT_CREATED_COMPONENT } from './actions';\nimport store from '../index';\nconst initialState = {\n  myProjects: {},\n  otherProjects: {},\n  currentProject: {},\n  snippetsList: {},\n  componentsList: {}\n}; // selectors \n\nfunction deleteUserById(users, id) {\n  return users.filter(user => user.id != id);\n}\n\nexport const projectsReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case PUT_GOTTEN_USER_PROJECTS:\n      return { ...state,\n        myProjects: action.payload\n      };\n\n    case PUT_CREATED_USER_PROJECT:\n      return { ...state,\n        myProjects: { ...state.myProjects,\n          data: [...state.myProjects.data, action.payload]\n        }\n      };\n\n    case PUT_DELETED_USER_PROJECT:\n      return { ...state,\n        myProjects: { ...state.myProjects,\n          data: state.myProjects.data.filter(project => project.id !== action.payload.data.id)\n        }\n      };\n\n    case PUT_ADDED_USER_IN_PROJECT:\n      let dataWithAddedUser = state.myProjects.data.map(project => {\n        if (project.id === action.payload.data['project_user']['project_id']) return { ...project,\n          users: [...(project.users || []), action.payload.data.user]\n        };\n        return project;\n      });\n      return { ...state,\n        myProjects: { ...state.myProjects,\n          data: dataWithAddedUser\n        }\n      };\n\n    case PUT_DELETED_USER_IN_PROJECT:\n      let dataWithOutAddedUser = state.myProjects.data.map(project => {\n        if (project.id == action.payload.data['project_id']) {\n          return { ...project,\n            users: project.users.filter(user => user.id != action.payload.data['user_id'])\n          };\n        }\n\n        return project;\n      });\n      return { ...state,\n        myProjects: { ...state.myProjects,\n          data: dataWithOutAddedUser\n        }\n      };\n\n    case PUT_ADDED_COMPONENT_IN_PROJECT:\n      let updatedCategories;\n\n      if (state.currentProject.categories.filter(category => category.id == action.payload.data.category.id).length > 0) {\n        updatedCategories = state.currentProject.categories;\n      } else {\n        updatedCategories = [...state.currentProject.categories, action.payload.data.category];\n      }\n\n      let updatedProjectStructure = updatedCategories.map(category => {\n        return { ...category,\n          components: [...state.currentProject.components, action.payload.data.component].filter(component => category.id == component['category_id'])\n        };\n      });\n      return { ...state,\n        currentProject: { ...state.currentProject,\n          components: [...state.currentProject.components, action.payload.data.component],\n          categories: updatedCategories,\n          projectStructure: updatedProjectStructure\n        }\n      };\n\n    case PUT_DELETED_COMPONENT_IN_PROJECT:\n      return { ...state,\n        currentProject: { ...state.currentProject,\n          components: state.currentProject.components.filter(component => component.id != action.payload.data.id),\n          projectStructure: state.currentProject.categories.map(category => {\n            return { ...category,\n              components: state.currentProject.components.filter(component => category.id == component['category_id'] && component.id != action.payload.data.id)\n            };\n          })\n        }\n      };\n\n    case PUT_GOTTEN_PROJECT_BY_ID:\n      const projectStructure = action.payload.data.categories.map(category => {\n        return { ...category,\n          components: action.payload.data.components.filter(component => category.id == component['category_id'])\n        };\n      });\n      return { ...state,\n        currentProject: { ...action.payload.data,\n          projectStructure\n        }\n      };\n\n    case PUT_GOTTEN_OTHER_PROJECTS:\n      const filteredProjects = action.payload.data.map(project => {\n        return { ...project,\n          users: deleteUserById(project.users, action.payload.userId)\n        };\n      });\n      return { ...state,\n        otherProjects: { ...action.payload,\n          data: filteredProjects\n        }\n      };\n\n    case PUT_SNIPPETS:\n      return { ...state,\n        snippetsList: action.payload\n      };\n\n    case PUT_CREATED_SNIPPETS:\n      return { ...state,\n        snippetsList: { ...state.snippetsList,\n          data: [...state.snippetsList.data, action.payload.data]\n        }\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/projects/reducers.js"],"names":["PUT_GOTTEN_USER_PROJECTS","PUT_GOTTEN_PROJECT_BY_ID","PUT_GOTTEN_OTHER_PROJECTS","PUT_CREATED_USER_PROJECT","PUT_UPDATED_USER_PROJECT","PUT_DELETED_USER_PROJECT","PUT_ADDED_USER_IN_PROJECT","PUT_DELETED_USER_IN_PROJECT","PUT_ADDED_COMPONENT_IN_PROJECT","PUT_DELETED_COMPONENT_IN_PROJECT","PUT_SNIPPETS","PUT_CREATED_SNIPPETS","PUT_GOTTEN_COMPONENTS","PUT_CREATED_COMPONENT","store","initialState","myProjects","otherProjects","currentProject","snippetsList","componentsList","deleteUserById","users","id","filter","user","projectsReduser","state","action","type","payload","data","project","dataWithAddedUser","map","dataWithOutAddedUser","updatedCategories","categories","category","length","updatedProjectStructure","components","component","projectStructure","filteredProjects","userId"],"mappings":"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","sourcesContent":["import { \r\n  PUT_GOTTEN_USER_PROJECTS,\r\n  PUT_GOTTEN_PROJECT_BY_ID,\r\n  PUT_GOTTEN_OTHER_PROJECTS,\r\n  PUT_CREATED_USER_PROJECT,\r\n  PUT_UPDATED_USER_PROJECT,\r\n  PUT_DELETED_USER_PROJECT,\r\n  PUT_ADDED_USER_IN_PROJECT,\r\n  PUT_DELETED_USER_IN_PROJECT,\r\n  PUT_ADDED_COMPONENT_IN_PROJECT,\r\n  PUT_DELETED_COMPONENT_IN_PROJECT,\r\n  PUT_SNIPPETS,\r\n  PUT_CREATED_SNIPPETS,\r\n  PUT_GOTTEN_COMPONENTS,\r\n  PUT_CREATED_COMPONENT\r\n} from './actions';\r\n\r\nimport store from '../index';\r\n\r\nconst initialState = {\r\n  myProjects: {},\r\n  otherProjects: {},\r\n  currentProject: {},\r\n  snippetsList: {},\r\n  componentsList: {}\r\n};\r\n\r\n// selectors \r\nfunction deleteUserById(users, id) {\r\n  return users.filter(user => user.id != id);\r\n}\r\n\r\n\r\nexport const projectsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case PUT_GOTTEN_USER_PROJECTS: \r\n      return ({ \r\n        ...state,\r\n        myProjects: action.payload\r\n      });\r\n\r\n    case PUT_CREATED_USER_PROJECT: \r\n      return ({\r\n        ...state,\r\n        myProjects: {...state.myProjects, data: [...state.myProjects.data, action.payload]}\r\n      });\r\n\r\n    case PUT_DELETED_USER_PROJECT: \r\n      return ({\r\n        ...state,\r\n        myProjects: { \r\n          ...state.myProjects, \r\n          data: state.myProjects.data.filter(project => project.id !== action.payload.data.id)\r\n        }\r\n      });\r\n\r\n      case PUT_ADDED_USER_IN_PROJECT: \r\n      let dataWithAddedUser = state.myProjects.data.map(project => {\r\n        \r\n        if (project.id === action.payload.data['project_user']['project_id']) \r\n          return {...project, users: [...project.users || [], action.payload.data.user]}\r\n        \r\n        return project;\r\n      });\r\n    \r\n\r\n      return ({ ...state, myProjects: {...state.myProjects, data: dataWithAddedUser}});\r\n     \r\n\r\n    case PUT_DELETED_USER_IN_PROJECT: \r\n      let dataWithOutAddedUser = state.myProjects.data.map(project => {\r\n        \r\n        if (project.id == action.payload.data['project_id']) {\r\n          return {...project, users: project.users.filter(user => user.id != action.payload.data['user_id'])}\r\n        }\r\n        \r\n        return project;\r\n      });\r\n      return ({...state, myProjects: {...state.myProjects, data: dataWithOutAddedUser}});\r\n      \r\n\r\n    case PUT_ADDED_COMPONENT_IN_PROJECT: \r\n      let updatedCategories;\r\n      \r\n      if (state.currentProject.categories.filter(category => category.id == action.payload.data.category.id).length > 0) {\r\n        updatedCategories = state.currentProject.categories;\r\n      } else {\r\n        updatedCategories = [\r\n          ...state.currentProject.categories, \r\n          action.payload.data.category\r\n        ];\r\n      }\r\n      let updatedProjectStructure = updatedCategories.map(category => {\r\n        \r\n        return {\r\n          ...category, \r\n          components: [\r\n            ...state.currentProject.components,\r\n            action.payload.data.component\r\n          ].filter(\r\n            component => category.id == component['category_id']\r\n          )\r\n        }\r\n      });\r\n      \r\n     \r\n\r\n      return ({ \r\n        ...state,\r\n        currentProject: { \r\n          ...state.currentProject,\r\n          components: [\r\n            ...state.currentProject.components, \r\n            action.payload.data.component\r\n          ],\r\n          categories: updatedCategories,\r\n          projectStructure: updatedProjectStructure\r\n        }\r\n      });\r\n\r\n    case PUT_DELETED_COMPONENT_IN_PROJECT: \r\n    \r\n      return ({ \r\n        ...state,\r\n        currentProject: { \r\n          ...state.currentProject,\r\n          components: state.currentProject.components.filter(\r\n            component => component.id != action.payload.data.id\r\n          ), \r\n  \r\n          projectStructure: state.currentProject.categories.map(category => {\r\n            return {\r\n              ...category, \r\n              components: state.currentProject.components.filter(\r\n                component => category.id == component['category_id'] && \r\n                  component.id != action.payload.data.id\r\n              )\r\n            }\r\n          })\r\n        }\r\n      });\r\n     \r\n\r\n    case PUT_GOTTEN_PROJECT_BY_ID: \r\n      const projectStructure = action.payload.data.categories.map(category => {\r\n        return {\r\n          ...category, \r\n          components: action.payload.data.components.filter(\r\n            component => category.id == component['category_id']\r\n          )\r\n        }\r\n      });\r\n\r\n      return ({ \r\n        ...state,\r\n        currentProject: { ...action.payload.data, projectStructure}\r\n      });\r\n    \r\n    case PUT_GOTTEN_OTHER_PROJECTS: \r\n      const filteredProjects = action.payload.data.map(project => {\r\n        return {\r\n          ...project, \r\n          users: deleteUserById(project.users, action.payload.userId)\r\n        }\r\n      });\r\n    \r\n      return ({ \r\n        ...state,\r\n        otherProjects: {\r\n          ...action.payload, \r\n          data: filteredProjects\r\n        }\r\n      });\r\n    \r\n    case PUT_SNIPPETS: \r\n      return {\r\n        ...state,\r\n        snippetsList: action.payload\r\n      }\r\n      \r\n    case PUT_CREATED_SNIPPETS: \r\n      return {\r\n        ...state,\r\n        snippetsList: {\r\n          ...state.snippetsList, \r\n          data: [...state.snippetsList.data, action.payload.data]\r\n        }\r\n      }\r\n\r\n    default: return state;  \r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}