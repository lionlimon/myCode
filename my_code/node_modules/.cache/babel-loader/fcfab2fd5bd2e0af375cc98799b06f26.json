{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { GET_USER_PROJECTS, getUserProjects } from './actions';\nimport { addNotify } from '../notify/actions';\nimport * as config from '../config';\n\nfunction fetchGetProjectsData(data) {\n  return fetch(config.URL_PROJECT_API, {\n    method: 'GET',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.status == 404 || response.ok ? response.json() : Promise.reject(response)).catch(e => console.error(e));\n}\n\nfunction* workerGetProjectsData(action) {\n  const data = yield call(fetchGetProjectsData, action.payload); // if (data.success) \t\n  //   yield put(putAuthData(data));\n  // else \n  //   yield put(putFailedAuthData(data));\n}\n\nexport function* watchProjectsData() {\n  yield takeEvery(SEND_REGISTER_DATA, workerGetProjectsData);\n}","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/projects/sagas.js"],"names":["takeEvery","put","call","GET_USER_PROJECTS","getUserProjects","addNotify","config","fetchGetProjectsData","data","fetch","URL_PROJECT_API","method","body","JSON","stringify","headers","then","response","status","ok","json","Promise","reject","catch","e","console","error","workerGetProjectsData","action","payload","watchProjectsData","SEND_REGISTER_DATA"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,SAAQC,iBAAR,EAA2BC,eAA3B,QAAiD,WAAjD;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;;AAGA,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AAElC,SAAOC,KAAK,CAACH,MAAM,CAACI,eAAR,EAAyB;AACnCC,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAF6B;AAGnCO,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAH0B,GAAzB,CAAL,CAOJC,IAPI,CAOCC,QAAQ,IAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACE,EAAnC,GAAwCF,QAAQ,CAACG,IAAT,EAAxC,GAA0DC,OAAO,CAACC,MAAR,CAAeL,QAAf,CAPvE,EAQJM,KARI,CAQGC,CAAD,IAAOC,OAAO,CAACC,KAAR,CAAcF,CAAd,CART,CAAP;AAWD;;AAED,UAAUG,qBAAV,CAAgCC,MAAhC,EAAwC;AAEvC,QAAMpB,IAAI,GAAG,MAAMN,IAAI,CAACK,oBAAD,EAAuBqB,MAAM,CAACC,OAA9B,CAAvB,CAFuC,CAIvC;AACC;AACA;AACA;AACD;;AAED,OAAO,UAAUC,iBAAV,GAA8B;AACnC,QAAM9B,SAAS,CAAC+B,kBAAD,EAAqBJ,qBAArB,CAAf;AACD","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects';\r\nimport {GET_USER_PROJECTS, getUserProjects} from './actions';\r\nimport {addNotify} from '../notify/actions';\r\nimport * as config from '../config';\r\n\r\n\r\nfunction fetchGetProjectsData(data) {\r\n\r\n  return fetch(config.URL_PROJECT_API, { \r\n    method: 'GET', \r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n  })\r\n    .then(response => response.status == 404 || response.ok ? response.json() : Promise.reject(response))\r\n    .catch((e) => console.error(e));\r\n  \r\n\r\n}\r\n\r\nfunction* workerGetProjectsData(action) {\r\n  \r\n\tconst data = yield call(fetchGetProjectsData, action.payload);\r\n  \r\n\t// if (data.success) \t\r\n  //   yield put(putAuthData(data));\r\n  // else \r\n  //   yield put(putFailedAuthData(data));\r\n}\r\n\r\nexport function* watchProjectsData() {\r\n  yield takeEvery(SEND_REGISTER_DATA, workerGetProjectsData);\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}