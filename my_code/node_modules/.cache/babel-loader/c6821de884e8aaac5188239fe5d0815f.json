{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\limon\\\\Desktop\\\\my projects\\\\myCode\\\\myCode.React\\\\my_code\\\\src\\\\components\\\\Project\\\\Project.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport Sidebar from '../Sidebar/Sidebar';\nimport CreateComponentForm from './CreateComponentForm';\nimport Empty from '../Empty/Empty';\nimport Loader from '../UI/Loader/Loader';\nimport { matchPath, Switch, Route, NavLink } from 'react-router-dom';\nimport Snippets from './Snippets';\nimport Editor from '../Editor/Editor';\nimport BackLink from '../UI/BackLink/BackLink';\nimport DeleteForm from '../DeleteForm';\nimport TopList from '../TopList/TopList';\nimport CreateSnippetForm from './CreateSnippetForm';\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarIsOpen: true,\n      componentId: undefined\n    };\n    this.openCreateComponentForm = this.openCreateComponentForm.bind(this);\n    this.openCreateSnippetForm = this.openCreateSnippetForm.bind(this);\n    this.onClickSaveButton = this.onClickSaveButton.bind(this);\n    this.onComponentDelete = this.onComponentDelete.bind(this);\n    this.setComponentId = this.setComponentId.bind(this);\n    this.match = matchPath(props.location.pathname, {\n      path: '/project:projectId'\n    });\n  }\n\n  componentDidMount() {\n    var _this$props$component, _this$props$component2;\n\n    if (this.props.currentProject.data === undefined) this.props.getProjectById(this.match.params.projectId);\n    if (((_this$props$component = this.props.components) === null || _this$props$component === void 0 ? void 0 : (_this$props$component2 = _this$props$component.componentsList) === null || _this$props$component2 === void 0 ? void 0 : _this$props$component2.data) === undefined) this.props.getComponents(this.match.params.projectId);\n  }\n\n  toggleSidebar() {\n    this.setState({\n      sidebarIsOpen: !this.state.sidebarIsOpen\n    });\n  }\n\n  onClickSaveButton({\n    data,\n    snippetId\n  }) {\n    this.props.updateSnippet({\n      data,\n      snippetId\n    });\n  }\n\n  onComponentDelete(id) {\n    this.props.openPopup( /*#__PURE__*/React.createElement(DeleteForm, {\n      onClickCancel: this.props.closePopup,\n      onClickDelete: () => {\n        this.props.deleteComponent(id);\n        this.props.closePopup();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, \"\\u0412\\u044B \\u0442\\u043E\\u0447\\u043D\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442 \\u0438\\u0437 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430?\"));\n  }\n\n  openCreateComponentForm() {\n    this.props.openPopup( /*#__PURE__*/React.createElement(CreateComponentForm, {\n      closePopup: this.props.closePopup,\n      addNotify: this.props.addNotify,\n      createComponent: this.props.createComponent,\n      projectId: this.match.params.projectId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  openCreateSnippetForm(componentId) {\n    this.props.openPopup( /*#__PURE__*/React.createElement(CreateSnippetForm, {\n      closePopup: this.props.closePopup,\n      componentId: componentId,\n      addNotify: this.props.addNotify,\n      createSnippet: this.props.createSnippet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  setComponentId(id) {\n    this.setState({\n      componentId: id\n    });\n  }\n\n  render() {\n    var _this$props$currentPr, _this$props$snippets;\n\n    const contentClass = this.state.sidebarIsOpen ? 'content' : 'content hidden-side';\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      onComponentDelete: this.onComponentDelete,\n      toggleSidebar: this.toggleSidebar.bind(this),\n      isOpen: this.state.sidebarIsOpen,\n      currentProject: this.props.currentProject,\n      menuItems: (_this$props$currentPr = this.props.currentProject) === null || _this$props$currentPr === void 0 ? void 0 : _this$props$currentPr.projectStructure,\n      openCreateComponentForm: this.openCreateComponentForm,\n      projectId: this.match.params.projectId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: contentClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BackLink, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TopList, {\n      auth: this.props.auth,\n      linkGen: `/project${this.match.params.projectId || ''}/component{component_id}/snippet{id}`,\n      onMenuButtonClick: () => {\n        this.openCreateSnippetForm(this.props.componentId);\n      },\n      items: ((_this$props$snippets = this.props.snippets) === null || _this$props$snippets === void 0 ? void 0 : _this$props$snippets.data) || [],\n      buttonIsVisible: this.state.componentId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/project:projectId/component:componentId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Snippets, Object.assign({\n      setComponentId: this.setComponentId\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/project:projectId/component:componentId/snippet:snippetId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Editor, Object.assign({\n      onClickSaveButton: this.onClickSaveButton\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n}\n\nexport default Project;","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/components/Project/Project.jsx"],"names":["React","Component","Fragment","Sidebar","CreateComponentForm","Empty","Loader","matchPath","Switch","Route","NavLink","Snippets","Editor","BackLink","DeleteForm","TopList","CreateSnippetForm","Project","constructor","props","state","sidebarIsOpen","componentId","undefined","openCreateComponentForm","bind","openCreateSnippetForm","onClickSaveButton","onComponentDelete","setComponentId","match","location","pathname","path","componentDidMount","currentProject","data","getProjectById","params","projectId","components","componentsList","getComponents","toggleSidebar","setState","snippetId","updateSnippet","id","openPopup","closePopup","deleteComponent","addNotify","createComponent","createSnippet","render","contentClass","projectStructure","auth","snippets"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport CreateComponentForm from './CreateComponentForm';\r\nimport Empty from '../Empty/Empty';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport {matchPath, Switch, Route, NavLink} from 'react-router-dom';\r\nimport Snippets from './Snippets';\r\nimport Editor from '../Editor/Editor';\r\nimport BackLink from '../UI/BackLink/BackLink';\r\nimport DeleteForm from '../DeleteForm';\r\nimport TopList from '../TopList/TopList';\r\nimport CreateSnippetForm from './CreateSnippetForm';\r\n\r\n\r\nclass Project extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sidebarIsOpen: true,\r\n      componentId: undefined,\r\n    }\r\n\r\n    this.openCreateComponentForm = this.openCreateComponentForm.bind(this);\r\n    this.openCreateSnippetForm = this.openCreateSnippetForm.bind(this);\r\n    this.onClickSaveButton = this.onClickSaveButton.bind(this);\r\n    this.onComponentDelete = this.onComponentDelete.bind(this);\r\n    this.setComponentId = this.setComponentId.bind(this);\r\n\r\n    this.match = matchPath(props.location.pathname, {\r\n      path: '/project:projectId'\r\n    });\r\n\r\n\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if (this.props.currentProject.data === undefined)\r\n      this.props.getProjectById(this.match.params.projectId);\r\n\r\n    if (this.props.components?.componentsList?.data === undefined)\r\n      this.props.getComponents(this.match.params.projectId);\r\n  }\r\n\r\n  \r\n  toggleSidebar() {\r\n    this.setState({ sidebarIsOpen: !this.state.sidebarIsOpen });\r\n  }\r\n\r\n  onClickSaveButton({data, snippetId}) {\r\n    \r\n    this.props.updateSnippet({data, snippetId});\r\n  }\r\n\r\n  onComponentDelete(id) {\r\n    this.props.openPopup(\r\n      <DeleteForm \r\n        onClickCancel={this.props.closePopup}\r\n        onClickDelete={() => {\r\n          this.props.deleteComponent(id);\r\n          this.props.closePopup();\r\n        }}\r\n      >\r\n        Вы точно хотите удалить компонент из проекта?\r\n      </DeleteForm>  \r\n    );\r\n  }\r\n\r\n  openCreateComponentForm() {\r\n    this.props.openPopup(\r\n      <CreateComponentForm \r\n        closePopup={this.props.closePopup}\r\n        addNotify={this.props.addNotify}\r\n        createComponent={this.props.createComponent}\r\n        projectId={this.match.params.projectId}\r\n      />\r\n    );\r\n    \r\n  }\r\n\r\n  openCreateSnippetForm(componentId) {\r\n    this.props.openPopup(\r\n      <CreateSnippetForm \r\n        closePopup={this.props.closePopup}\r\n        componentId={componentId}\r\n        addNotify={this.props.addNotify}\r\n        createSnippet={this.props.createSnippet}\r\n      />\r\n    );\r\n  }\r\n\r\n  setComponentId(id) {\r\n    this.setState({componentId: id});\r\n  }\r\n\r\n  render() {\r\n    const contentClass = this.state.sidebarIsOpen ? 'content' : 'content hidden-side';\r\n    return (\r\n      <Fragment>\r\n        <Sidebar \r\n          onComponentDelete={this.onComponentDelete}\r\n          toggleSidebar={this.toggleSidebar.bind(this)} \r\n          isOpen={this.state.sidebarIsOpen} \r\n          currentProject={this.props.currentProject}\r\n          menuItems={this.props.currentProject?.projectStructure} \r\n          openCreateComponentForm={this.openCreateComponentForm}\r\n          projectId={this.match.params.projectId}\r\n        />\r\n        <div className={contentClass}>\r\n          {/* {this.props.components?.componentsList?.data && <Loader />} */}\r\n          {/* {this.props.components?.componentsList?.data?.length == 0 && \r\n            <Empty>В этом проекте пока нет компонентов</Empty>} */}\r\n\r\n\r\n          <BackLink />\r\n\r\n          <TopList \r\n            auth={this.props.auth} \r\n            linkGen={`/project${this.match.params.projectId || ''}/component{component_id}/snippet{id}`} \r\n            onMenuButtonClick={() => {this.openCreateSnippetForm(this.props.componentId)}} \r\n            items={this.props.snippets?.data || []} \r\n            buttonIsVisible={this.state.componentId}\r\n          />\r\n\r\n          <Route path=\"/project:projectId/component:componentId\">\r\n            <Snippets setComponentId={this.setComponentId} {...this.props} />\r\n          </Route>\r\n\r\n          <Route exact path=\"/project:projectId/component:componentId/snippet:snippetId\">\r\n            <Editor onClickSaveButton={this.onClickSaveButton} {...this.props} />\r\n          </Route>\r\n          \r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Project;"]},"metadata":{},"sourceType":"module"}