{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { GET_SNIPPETS, putGottenSnippets } from './actions';\nimport { putAddedComponenInProject } from '../projects/actions';\nimport fetchWithAuth from '../fetchWithAuth';\nimport * as config from '../config';\nimport { addNotify } from '../notify/actions'; // Workers\n\nfunction* workerGetSnippets(action) {\n  const response = yield fetchWithAuth(`${config.URL_SNIPPET_API}/component${action.payload}`);\n\n  if (response && response.success === true) {\n    yield put(putGottenSnippets(response));\n  } else yield put(addNotify({\n    message: response.message\n  }));\n} // Watchers \n\n\nexport function* watchGetSnippets() {\n  yield takeEvery(GET_SNIPPETS, workerGetSnippets);\n}","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/snippets/sagas.js"],"names":["takeEvery","put","call","GET_SNIPPETS","putGottenSnippets","putAddedComponenInProject","fetchWithAuth","config","addNotify","workerGetSnippets","action","response","URL_SNIPPET_API","payload","success","message","watchGetSnippets"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,SACEC,YADF,EAEEC,iBAFF,QAGO,WAHP;AAKA,SAAQC,yBAAR,QAAwC,qBAAxC;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,mBAA1B,C,CAEA;;AAEA,UAAUC,iBAAV,CAA4BC,MAA5B,EAAoC;AAEnC,QAAMC,QAAQ,GAAG,MAAML,aAAa,CAAE,GAAEC,MAAM,CAACK,eAAgB,aAAYF,MAAM,CAACG,OAAQ,EAAtD,CAApC;;AAEA,MAAIF,QAAQ,IAAIA,QAAQ,CAACG,OAAT,KAAqB,IAArC,EAA2C;AACxC,UAAMb,GAAG,CAACG,iBAAiB,CAACO,QAAD,CAAlB,CAAT;AACD,GAFF,MAKG,MAAMV,GAAG,CAACO,SAAS,CAAC;AAACO,IAAAA,OAAO,EAAEJ,QAAQ,CAACI;AAAnB,GAAD,CAAV,CAAT;AACH,C,CAGD;;;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,QAAMhB,SAAS,CAACG,YAAD,EAAeM,iBAAf,CAAf;AACD","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects';\r\nimport {\r\n  GET_SNIPPETS,\r\n  putGottenSnippets\r\n} from './actions';\r\n\r\nimport {putAddedComponenInProject} from '../projects/actions';\r\n\r\nimport fetchWithAuth from '../fetchWithAuth';\r\nimport * as config from '../config';\r\nimport { addNotify } from '../notify/actions';\r\n\r\n// Workers\r\n\r\nfunction* workerGetSnippets(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(`${config.URL_SNIPPET_API}/component${action.payload}`);\r\n\r\n\tif (response && response.success === true) {\r\n    yield put(putGottenSnippets(response));\r\n  }\r\n    \r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\n\r\n// Watchers \r\n\r\nexport function* watchGetSnippets() {\r\n  yield takeEvery(GET_SNIPPETS, workerGetSnippets);\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}