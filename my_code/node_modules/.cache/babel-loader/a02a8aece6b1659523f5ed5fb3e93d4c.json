{"ast":null,"code":"// import {takeEvery, put, call} from 'redux-saga/effects';\n// import {\n//   GET_SNIPPETS,\n//   CREATE_SNIPPETS,\n//   putCreatedSnippets,\n//   putGottenSnippets,\n//   putUpdatedSnippet,\n//   UPDATE_SNIPPETS\n// } from './actions';\n// import fetchWithAuth from '../fetchWithAuth';\n// import * as config from '../config';\n// import { addNotify } from '../notify/actions';\n// // Workers\n// function* workerGetSnippets(action) {\n// \tconst response = yield fetchWithAuth(`${config.URL_SNIPPET_API}/component${action.payload}`);\n// \tif (response && response.success === true) \n//     yield put(putGottenSnippets(response));\n//   else \n//     yield put(addNotify({message: response.message}));\n// }\n// function* workerCreateSnippet(action) {\n// \tconst response = yield fetchWithAuth(`${config.URL_SNIPPET_API}`, 'POST', action.payload);\n// \tif (response && response.success === true) \n//     yield put(putCreatedSnippets(response));\n//   else \n//     yield put(addNotify({message: response.message}));\n// }\n// function* workerUpdateSnippet(action) {\n// \tconst response = yield fetchWithAuth(`${config.URL_SNIPPET_API}/${action.payload.snippetId}`, 'PUT', action.payload.data);\n//   console.log(response, 'ответ');\n// \tif (response && response.success === true) \n//     yield put(addNotify({message: 'Сниппет сохранен'}));\n//   else \n//     yield put(addNotify({message: 'Возникла ошибка на сервере'}));\n// }\n// // Watchers \n// export function* watchGetSnippets() {\n//   yield takeEvery(GET_SNIPPETS, workerGetSnippets);\n// }\n// export function* watchCreateSnippet() {\n//   yield takeEvery(CREATE_SNIPPETS, workerCreateSnippet);\n// }\n// export function* watchUpdateSnippet() {\n//   yield takeEvery(UPDATE_SNIPPETS, workerUpdateSnippet);\n// }","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/snippets/sagas.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["// import {takeEvery, put, call} from 'redux-saga/effects';\r\n// import {\r\n//   GET_SNIPPETS,\r\n//   CREATE_SNIPPETS,\r\n//   putCreatedSnippets,\r\n//   putGottenSnippets,\r\n//   putUpdatedSnippet,\r\n//   UPDATE_SNIPPETS\r\n// } from './actions';\r\n\r\n\r\n// import fetchWithAuth from '../fetchWithAuth';\r\n// import * as config from '../config';\r\n// import { addNotify } from '../notify/actions';\r\n\r\n// // Workers\r\n\r\n// function* workerGetSnippets(action) {\r\n  \r\n// \tconst response = yield fetchWithAuth(`${config.URL_SNIPPET_API}/component${action.payload}`);\r\n\r\n// \tif (response && response.success === true) \r\n//     yield put(putGottenSnippets(response));\r\n//   else \r\n//     yield put(addNotify({message: response.message}));\r\n// }\r\n\r\n// function* workerCreateSnippet(action) {\r\n  \r\n// \tconst response = yield fetchWithAuth(`${config.URL_SNIPPET_API}`, 'POST', action.payload);\r\n\r\n// \tif (response && response.success === true) \r\n//     yield put(putCreatedSnippets(response));\r\n//   else \r\n//     yield put(addNotify({message: response.message}));\r\n// }\r\n\r\n// function* workerUpdateSnippet(action) {\r\n  \r\n// \tconst response = yield fetchWithAuth(`${config.URL_SNIPPET_API}/${action.payload.snippetId}`, 'PUT', action.payload.data);\r\n//   console.log(response, 'ответ');\r\n// \tif (response && response.success === true) \r\n//     yield put(addNotify({message: 'Сниппет сохранен'}));\r\n//   else \r\n//     yield put(addNotify({message: 'Возникла ошибка на сервере'}));\r\n// }\r\n\r\n\r\n// // Watchers \r\n\r\n// export function* watchGetSnippets() {\r\n//   yield takeEvery(GET_SNIPPETS, workerGetSnippets);\r\n// }\r\n\r\n// export function* watchCreateSnippet() {\r\n//   yield takeEvery(CREATE_SNIPPETS, workerCreateSnippet);\r\n// }\r\n\r\n// export function* watchUpdateSnippet() {\r\n//   yield takeEvery(UPDATE_SNIPPETS, workerUpdateSnippet);\r\n// }\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}