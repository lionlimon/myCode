{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\limon\\\\Desktop\\\\my projects\\\\myCode\\\\myCode.React\\\\my_code\\\\src\\\\components\\\\Project\\\\Project.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport Sidebar from '../Sidebar/Sidebar';\nimport CreateComponentForm from './CreateComponentForm';\nimport Empty from '../Empty/Empty';\nimport Loader from '../UI/Loader/Loader';\nimport { matchPath, Switch, Route, NavLink } from 'react-router-dom';\nimport Snippets from './Snippets';\nimport Editor from '../Editor/Editor';\nimport BackLink from '../UI/BackLink/BackLink';\nimport DeleteForm from '../DeleteForm';\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarIsOpen: true\n    };\n    this.openCreateComponentForm = this.openCreateComponentForm.bind(this);\n    this.onClickSaveButton = this.onClickSaveButton.bind(this);\n    this.onComponentDelete = this.onComponentDelete.bind(this);\n    this.match = matchPath(props.location.pathname, {\n      path: '/project:projectId'\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.currentProject.data === undefined) this.props.getProjectById(this.match.params.projectId);\n    if (this.props.components.componentsList.data === undefined) this.props.getComponents(this.match.params.projectId);\n  }\n\n  toggleSidebar() {\n    this.setState({\n      sidebarIsOpen: !this.state.sidebarIsOpen\n    });\n  }\n\n  onClickSaveButton({\n    data,\n    snippetId\n  }) {\n    this.props.updateSnippet({\n      data,\n      snippetId\n    });\n  }\n\n  onComponentDelete(id) {\n    this.props.openPopup( /*#__PURE__*/React.createElement(DeleteForm, {\n      onClickCancel: this.props.closePopup,\n      onClickDelete: () => {\n        this.props.deleteComponent(id);\n        this.props.closePopup();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, \"\\u0412\\u044B \\u0442\\u043E\\u0447\\u043D\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442 \\u0438\\u0437 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430?\"));\n  }\n\n  openCreateComponentForm() {\n    this.props.openPopup( /*#__PURE__*/React.createElement(CreateComponentForm, {\n      closePopup: this.props.closePopup,\n      addNotify: this.props.addNotify,\n      createComponent: this.props.createComponent,\n      projectId: this.match.params.projectId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  render() {\n    var _this$props$component;\n\n    const contentClass = this.state.sidebarIsOpen ? 'content' : 'content hidden-side';\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      onComponentDelete: this.onComponentDelete,\n      toggleSidebar: this.toggleSidebar.bind(this),\n      isOpen: this.state.sidebarIsOpen,\n      currentProject: this.props.currentProject,\n      menuItems: this.props.currentProject.projectStructure,\n      openCreateComponentForm: this.openCreateComponentForm,\n      projectId: this.match.params.projectId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: contentClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, this.props.components.componentsList.data === undefined && /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 71\n      }\n    }), ((_this$props$component = this.props.components.componentsList) === null || _this$props$component === void 0 ? void 0 : _this$props$component.data.length) == 0 && /*#__PURE__*/React.createElement(Empty, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"\\u0412 \\u044D\\u0442\\u043E\\u043C \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0435 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u043A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442\\u043E\\u0432\"), /*#__PURE__*/React.createElement(BackLink, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/project:projectId/component:componentId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Snippets, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/project:projectId/component:componentId/snippet:snippetId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Editor, Object.assign({\n      onClickSaveButton: this.onClickSaveButton\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n}\n\nexport default Project;","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/components/Project/Project.jsx"],"names":["React","Component","Fragment","Sidebar","CreateComponentForm","Empty","Loader","matchPath","Switch","Route","NavLink","Snippets","Editor","BackLink","DeleteForm","Project","constructor","props","state","sidebarIsOpen","openCreateComponentForm","bind","onClickSaveButton","onComponentDelete","match","location","pathname","path","componentDidMount","currentProject","data","undefined","getProjectById","params","projectId","components","componentsList","getComponents","toggleSidebar","setState","snippetId","updateSnippet","id","openPopup","closePopup","deleteComponent","addNotify","createComponent","render","contentClass","projectStructure","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,KAA3B,EAAkCC,OAAlC,QAAgD,kBAAhD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,OAAN,SAAsBd,SAAtB,CAAgC;AAE9Be,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AADJ,KAAb;AAIA,SAAKC,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BC,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;AAEA,SAAKG,KAAL,GAAajB,SAAS,CAACU,KAAK,CAACQ,QAAN,CAAeC,QAAhB,EAA0B;AAC9CC,MAAAA,IAAI,EAAE;AADwC,KAA1B,CAAtB;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAElB,QAAI,KAAKX,KAAL,CAAWY,cAAX,CAA0BC,IAA1B,KAAmCC,SAAvC,EACE,KAAKd,KAAL,CAAWe,cAAX,CAA0B,KAAKR,KAAL,CAAWS,MAAX,CAAkBC,SAA5C;AAEF,QAAI,KAAKjB,KAAL,CAAWkB,UAAX,CAAsBC,cAAtB,CAAqCN,IAArC,KAA8CC,SAAlD,EACE,KAAKd,KAAL,CAAWoB,aAAX,CAAyB,KAAKb,KAAL,CAAWS,MAAX,CAAkBC,SAA3C;AACH;;AAGDI,EAAAA,aAAa,GAAG;AACd,SAAKC,QAAL,CAAc;AAAEpB,MAAAA,aAAa,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA7B,KAAd;AACD;;AAEDG,EAAAA,iBAAiB,CAAC;AAACQ,IAAAA,IAAD;AAAOU,IAAAA;AAAP,GAAD,EAAoB;AAEnC,SAAKvB,KAAL,CAAWwB,aAAX,CAAyB;AAACX,MAAAA,IAAD;AAAOU,MAAAA;AAAP,KAAzB;AACD;;AAEDjB,EAAAA,iBAAiB,CAACmB,EAAD,EAAK;AACpB,SAAKzB,KAAL,CAAW0B,SAAX,eACE,oBAAC,UAAD;AACE,MAAA,aAAa,EAAE,KAAK1B,KAAL,CAAW2B,UAD5B;AAEE,MAAA,aAAa,EAAE,MAAM;AACnB,aAAK3B,KAAL,CAAW4B,eAAX,CAA2BH,EAA3B;AACA,aAAKzB,KAAL,CAAW2B,UAAX;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qPADF;AAWD;;AAEDxB,EAAAA,uBAAuB,GAAG;AACxB,SAAKH,KAAL,CAAW0B,SAAX,eACE,oBAAC,mBAAD;AACE,MAAA,UAAU,EAAE,KAAK1B,KAAL,CAAW2B,UADzB;AAEE,MAAA,SAAS,EAAE,KAAK3B,KAAL,CAAW6B,SAFxB;AAGE,MAAA,eAAe,EAAE,KAAK7B,KAAL,CAAW8B,eAH9B;AAIE,MAAA,SAAS,EAAE,KAAKvB,KAAL,CAAWS,MAAX,CAAkBC,SAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AAEDc,EAAAA,MAAM,GAAG;AAAA;;AACP,UAAMC,YAAY,GAAG,KAAK/B,KAAL,CAAWC,aAAX,GAA2B,SAA3B,GAAuC,qBAA5D;AACA,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,iBAAiB,EAAE,KAAKI,iBAD1B;AAEE,MAAA,aAAa,EAAE,KAAKe,aAAL,CAAmBjB,IAAnB,CAAwB,IAAxB,CAFjB;AAGE,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,aAHrB;AAIE,MAAA,cAAc,EAAE,KAAKF,KAAL,CAAWY,cAJ7B;AAKE,MAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWY,cAAX,CAA0BqB,gBALvC;AAME,MAAA,uBAAuB,EAAE,KAAK9B,uBANhC;AAOE,MAAA,SAAS,EAAE,KAAKI,KAAL,CAAWS,MAAX,CAAkBC,SAP/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAUE;AAAK,MAAA,SAAS,EAAEe,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhC,KAAL,CAAWkB,UAAX,CAAsBC,cAAtB,CAAqCN,IAArC,KAA8CC,SAA9C,iBAA2D,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9D,EAEG,+BAAKd,KAAL,CAAWkB,UAAX,CAAsBC,cAAtB,gFAAsCN,IAAtC,CAA2CqB,MAA3C,KAAqD,CAArD,iBACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mMAHJ,eAME,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,0CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD,oBAAc,KAAKlC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAPF,eAUE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,4DAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,iBAAiB,EAAE,KAAKK;AAAhC,OAAuD,KAAKL,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAVF,CAVF,CADF;AA4BD;;AA/F6B;;AAmGhC,eAAeF,OAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport CreateComponentForm from './CreateComponentForm';\r\nimport Empty from '../Empty/Empty';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport {matchPath, Switch, Route, NavLink} from 'react-router-dom';\r\nimport Snippets from './Snippets';\r\nimport Editor from '../Editor/Editor';\r\nimport BackLink from '../UI/BackLink/BackLink';\r\nimport DeleteForm from '../DeleteForm';\r\n\r\nclass Project extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sidebarIsOpen: true,\r\n    }\r\n\r\n    this.openCreateComponentForm = this.openCreateComponentForm.bind(this);\r\n    this.onClickSaveButton = this.onClickSaveButton.bind(this);\r\n    this.onComponentDelete = this.onComponentDelete.bind(this);\r\n\r\n    this.match = matchPath(props.location.pathname, {\r\n      path: '/project:projectId'\r\n    });\r\n\r\n\r\n  }\r\n  \r\n  componentDidMount() {\r\n\r\n    if (this.props.currentProject.data === undefined)\r\n      this.props.getProjectById(this.match.params.projectId);\r\n\r\n    if (this.props.components.componentsList.data === undefined)\r\n      this.props.getComponents(this.match.params.projectId);\r\n  }\r\n\r\n  \r\n  toggleSidebar() {\r\n    this.setState({ sidebarIsOpen: !this.state.sidebarIsOpen });\r\n  }\r\n\r\n  onClickSaveButton({data, snippetId}) {\r\n    \r\n    this.props.updateSnippet({data, snippetId});\r\n  }\r\n\r\n  onComponentDelete(id) {\r\n    this.props.openPopup(\r\n      <DeleteForm \r\n        onClickCancel={this.props.closePopup}\r\n        onClickDelete={() => {\r\n          this.props.deleteComponent(id);\r\n          this.props.closePopup();\r\n        }}\r\n      >\r\n        Вы точно хотите удалить компонент из проекта?\r\n      </DeleteForm>  \r\n    );\r\n  }\r\n\r\n  openCreateComponentForm() {\r\n    this.props.openPopup(\r\n      <CreateComponentForm \r\n        closePopup={this.props.closePopup}\r\n        addNotify={this.props.addNotify}\r\n        createComponent={this.props.createComponent}\r\n        projectId={this.match.params.projectId}\r\n      />\r\n    );\r\n    \r\n  }\r\n\r\n  render() {\r\n    const contentClass = this.state.sidebarIsOpen ? 'content' : 'content hidden-side';\r\n    return (\r\n      <Fragment>\r\n        <Sidebar \r\n          onComponentDelete={this.onComponentDelete}\r\n          toggleSidebar={this.toggleSidebar.bind(this)} \r\n          isOpen={this.state.sidebarIsOpen} \r\n          currentProject={this.props.currentProject}\r\n          menuItems={this.props.currentProject.projectStructure} \r\n          openCreateComponentForm={this.openCreateComponentForm}\r\n          projectId={this.match.params.projectId}\r\n        />\r\n        <div className={contentClass}>\r\n          {this.props.components.componentsList.data === undefined && <Loader />}\r\n          {this.props.components.componentsList?.data.length == 0 && \r\n            <Empty>В этом проекте пока нет компонентов</Empty>}\r\n\r\n\r\n          <BackLink />\r\n          <Route path=\"/project:projectId/component:componentId\">\r\n            <Snippets {...this.props} />\r\n          </Route>\r\n          <Route exact path=\"/project:projectId/component:componentId/snippet:snippetId\">\r\n            <Editor onClickSaveButton={this.onClickSaveButton} {...this.props} />\r\n          </Route>\r\n\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Project;"]},"metadata":{},"sourceType":"module"}