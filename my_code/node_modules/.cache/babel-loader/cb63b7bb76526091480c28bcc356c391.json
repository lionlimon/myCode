{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { GET_COMPONENTS, CREATE_COMPONENT, DELETE_COMPONENT, putDeletedComponent, putGottenComponents, putCreatedComponent } from './actions';\nimport { putAddedComponenInProject, putDeletedComponenInProject } from '../projects/actions';\nimport fetchWithAuth from '../fetchWithAuth';\nimport * as config from '../config';\nimport { addNotify } from '../notify/actions';\nimport store from '../index'; // Workers\n\nfunction* workerGetComponents(action) {\n  const response = yield fetchWithAuth(`${config.URL_COMPONENT_API}/project${action.payload}`);\n\n  if (response && response.success === true) {\n    yield put(putGottenComponents(response));\n  } else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerCreateComponent(action) {\n  const response = yield fetchWithAuth(config.URL_COMPONENT_API, 'POST', action.payload);\n  if (response && response.success === true) yield put(putAddedComponenInProject(response));else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerDeleteComponent(action) {\n  const response = yield fetchWithAuth(`${config.URL_COMPONENT_API}/${action.payload}`, 'DELETE');\n  console.log(response);\n  if (response && response.success === true) yield put(putDeletedComponenInProject(response));else yield put(addNotify({\n    message: 'Возникла ошибка на сервере'\n  }));\n} // Watchers \n\n\nexport function* watchGetComponents() {\n  yield takeEvery(GET_COMPONENTS, workerGetComponents);\n}\nexport function* wathcCreateComponent() {\n  yield takeEvery(CREATE_COMPONENT, workerCreateComponent);\n}\nexport function* wathcDeletedComponent() {\n  yield takeEvery(DELETE_COMPONENT, workerDeleteComponent);\n}","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/components/sagas.js"],"names":["takeEvery","put","call","GET_COMPONENTS","CREATE_COMPONENT","DELETE_COMPONENT","putDeletedComponent","putGottenComponents","putCreatedComponent","putAddedComponenInProject","putDeletedComponenInProject","fetchWithAuth","config","addNotify","store","workerGetComponents","action","response","URL_COMPONENT_API","payload","success","message","workerCreateComponent","workerDeleteComponent","console","log","watchGetComponents","wathcCreateComponent","wathcDeletedComponent"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,SACEC,cADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,WAPP;AASA,SAAQC,yBAAR,EAAmCC,2BAAnC,QAAqE,qBAArE;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,UAAlB,C,CAEA;;AAEA,UAAUC,mBAAV,CAA8BC,MAA9B,EAAsC;AAErC,QAAMC,QAAQ,GAAG,MAAMN,aAAa,CAAE,GAAEC,MAAM,CAACM,iBAAkB,WAAUF,MAAM,CAACG,OAAQ,EAAtD,CAApC;;AAEA,MAAIF,QAAQ,IAAIA,QAAQ,CAACG,OAAT,KAAqB,IAArC,EAA2C;AACxC,UAAMnB,GAAG,CAACM,mBAAmB,CAACU,QAAD,CAApB,CAAT;AACD,GAFF,MAKG,MAAMhB,GAAG,CAACY,SAAS,CAAC;AAACQ,IAAAA,OAAO,EAAEJ,QAAQ,CAACI;AAAnB,GAAD,CAAV,CAAT;AACH;;AAED,UAAUC,qBAAV,CAAgCN,MAAhC,EAAwC;AAEvC,QAAMC,QAAQ,GAAG,MAAMN,aAAa,CAACC,MAAM,CAACM,iBAAR,EAA2B,MAA3B,EAAmCF,MAAM,CAACG,OAA1C,CAApC;AAEA,MAAIF,QAAQ,IAAIA,QAAQ,CAACG,OAAT,KAAqB,IAArC,EACG,MAAMnB,GAAG,CAACQ,yBAAyB,CAACQ,QAAD,CAA1B,CAAT,CADH,KAGG,MAAMhB,GAAG,CAACY,SAAS,CAAC;AAACQ,IAAAA,OAAO,EAAEJ,QAAQ,CAACI;AAAnB,GAAD,CAAV,CAAT;AACH;;AAED,UAAUE,qBAAV,CAAgCP,MAAhC,EAAwC;AAEvC,QAAMC,QAAQ,GAAG,MAAMN,aAAa,CAAE,GAAEC,MAAM,CAACM,iBAAkB,IAAGF,MAAM,CAACG,OAAQ,EAA/C,EAAkD,QAAlD,CAApC;AACCK,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACD,MAAIA,QAAQ,IAAIA,QAAQ,CAACG,OAAT,KAAqB,IAArC,EACG,MAAMnB,GAAG,CAACS,2BAA2B,CAACO,QAAD,CAA5B,CAAT,CADH,KAGG,MAAMhB,GAAG,CAACY,SAAS,CAAC;AAACQ,IAAAA,OAAO,EAAE;AAAV,GAAD,CAAV,CAAT;AACH,C,CAED;;;AAEA,OAAO,UAAUK,kBAAV,GAA+B;AACpC,QAAM1B,SAAS,CAACG,cAAD,EAAiBY,mBAAjB,CAAf;AACD;AAED,OAAO,UAAUY,oBAAV,GAAiC;AACtC,QAAM3B,SAAS,CAACI,gBAAD,EAAmBkB,qBAAnB,CAAf;AACD;AAED,OAAO,UAAUM,qBAAV,GAAkC;AACvC,QAAM5B,SAAS,CAACK,gBAAD,EAAmBkB,qBAAnB,CAAf;AACD","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects';\r\nimport {\r\n  GET_COMPONENTS,\r\n  CREATE_COMPONENT, \r\n  DELETE_COMPONENT,\r\n  putDeletedComponent,\r\n  putGottenComponents,\r\n  putCreatedComponent\r\n} from './actions';\r\n\r\nimport {putAddedComponenInProject, putDeletedComponenInProject} from '../projects/actions';\r\n\r\nimport fetchWithAuth from '../fetchWithAuth';\r\nimport * as config from '../config';\r\nimport { addNotify } from '../notify/actions';\r\nimport store from '../index';\r\n\r\n// Workers\r\n\r\nfunction* workerGetComponents(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(`${config.URL_COMPONENT_API}/project${action.payload}`);\r\n\r\n\tif (response && response.success === true) {\r\n    yield put(putGottenComponents(response));\r\n  }\r\n    \r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerCreateComponent(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(config.URL_COMPONENT_API, 'POST', action.payload);\r\n\r\n\tif (response && response.success === true) \t\r\n    yield put(putAddedComponenInProject(response));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerDeleteComponent(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(`${config.URL_COMPONENT_API}/${action.payload}`, 'DELETE');\r\n  console.log(response)\r\n\tif (response && response.success === true) \t\r\n    yield put(putDeletedComponenInProject(response));\r\n  else \r\n    yield put(addNotify({message: 'Возникла ошибка на сервере'}));\r\n}\r\n\r\n// Watchers \r\n\r\nexport function* watchGetComponents() {\r\n  yield takeEvery(GET_COMPONENTS, workerGetComponents);\r\n}\r\n\r\nexport function* wathcCreateComponent() {\r\n  yield takeEvery(CREATE_COMPONENT, workerCreateComponent);\r\n}\r\n\r\nexport function* wathcDeletedComponent() {\r\n  yield takeEvery(DELETE_COMPONENT, workerDeleteComponent);\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}