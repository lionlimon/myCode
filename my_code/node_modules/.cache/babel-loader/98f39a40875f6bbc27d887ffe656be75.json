{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { SEND_REGISTER_DATA, PUT_REGISTER_DATA, putRegisterData, sendAuthData } from './actions';\nimport * as config from '../config';\n\nfunction fetchData(data) {\n  console.log(JSON.stringify(data));\n  return fetch(config.URL_REGISTER_API, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.ok ? response.json() : Promise.reject(response)).catch(error => console.log('пздц'));\n}\n\nfunction* workerRegisterData(action) {\n  try {\n    const data = yield call(fetchData, action.payload);\n    console.log(data);\n    yield put(putRegisterData(data));\n  } catch (e) {\n    throw new error('Произошла ошибка при отправке формы');\n  }\n}\n\nexport function* watchRegisterData() {\n  yield takeEvery(SEND_REGISTER_DATA, workerRegisterData);\n} // export function* watchRegisterPutData() {\n//   yield takeEvery(PUT_REGISTER_DATA, workerRegisterData);\n// }","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/auth/sagas.js"],"names":["takeEvery","put","call","SEND_REGISTER_DATA","PUT_REGISTER_DATA","putRegisterData","sendAuthData","config","fetchData","data","console","log","JSON","stringify","fetch","URL_REGISTER_API","method","body","headers","then","response","ok","json","Promise","reject","catch","error","workerRegisterData","action","payload","e","watchRegisterData"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,EAAgDC,eAAhD,EAAiEC,YAAjE,QAAqF,WAArF;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;;AAGA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAEvBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAZ;AAGA,SAAOK,KAAK,CAACP,MAAM,CAACQ,gBAAR,EAA0B;AACpCC,IAAAA,MAAM,EAAE,MAD4B;AAEpCC,IAAAA,IAAI,EAAEL,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAF8B;AAGpCS,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAH2B,GAA1B,CAAL,CAOJC,IAPI,CAOCC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,GAAcD,QAAQ,CAACE,IAAT,EAAd,GAAgCC,OAAO,CAACC,MAAR,CAAeJ,QAAf,CAP7C,EAQJK,KARI,CAQGC,KAAD,IAAWhB,OAAO,CAACC,GAAR,CAAY,MAAZ,CARb,CAAP;AAWD;;AAED,UAAUgB,kBAAV,CAA6BC,MAA7B,EAAqC;AACnC,MAAI;AACF,UAAMnB,IAAI,GAAG,MAAMP,IAAI,CAACM,SAAD,EAAYoB,MAAM,CAACC,OAAnB,CAAvB;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMR,GAAG,CAACI,eAAe,CAACI,IAAD,CAAhB,CAAT;AACD,GAJD,CAIE,OAAOqB,CAAP,EAAU;AACV,UAAM,IAAIJ,KAAJ,CAAU,qCAAV,CAAN;AACD;AAEF;;AAED,OAAO,UAAUK,iBAAV,GAA8B;AACnC,QAAM/B,SAAS,CAACG,kBAAD,EAAqBwB,kBAArB,CAAf;AACD,C,CAED;AACA;AACA","sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport { SEND_REGISTER_DATA, PUT_REGISTER_DATA, putRegisterData, sendAuthData } from './actions';\r\nimport * as config from '../config';\r\n\r\n\r\nfunction fetchData(data) {\r\n  \r\n  console.log(JSON.stringify(data));\r\n\r\n\r\n  return fetch(config.URL_REGISTER_API, { \r\n    method: 'POST', \r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n  })\r\n    .then(response => response.ok ? response.json() : Promise.reject(response))\r\n    .catch((error) => console.log('пздц'));\r\n  \r\n\r\n}\r\n\r\nfunction* workerRegisterData(action) {\r\n  try {\r\n    const data = yield call(fetchData, action.payload);\r\n    console.log(data);\r\n    yield put(putRegisterData(data));\r\n  } catch (e) {\r\n    throw new error('Произошла ошибка при отправке формы');\r\n  }\r\n  \r\n}\r\n\r\nexport function* watchRegisterData() {\r\n  yield takeEvery(SEND_REGISTER_DATA, workerRegisterData);\r\n}\r\n\r\n// export function* watchRegisterPutData() {\r\n//   yield takeEvery(PUT_REGISTER_DATA, workerRegisterData);\r\n// }"]},"metadata":{},"sourceType":"module"}