{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { GET_SNIPPETS, CREATE_SNIPPETS, putCreatedSnippets, putGottenSnippets } from './actions';\nimport { putAddedComponenInProject } from '../projects/actions';\nimport fetchWithAuth from '../fetchWithAuth';\nimport * as config from '../config';\nimport { addNotify } from '../notify/actions'; // Workers\n\nfunction* workerGetSnippets(action) {\n  const response = yield fetchWithAuth(`${config.URL_SNIPPET_API}/component${action.payload}`);\n  if (response && response.success === true) yield put(putGottenSnippets(response));else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerCreateSnippet(action) {\n  const response = yield fetchWithAuth(`${config.URL_SNIPPET_API}/component${action.payload}`, 'POST', action.payload);\n  console.log(response); // if (response && response.success === true) \n  //   yield put(putCreatedSnippets(response));\n  // else \n  //   yield put(addNotify({message: response.message}));\n} // Watchers \n\n\nexport function* watchGetSnippets() {\n  yield takeEvery(GET_SNIPPETS, workerGetSnippets);\n}\nexport function* watchCreateSnippet() {\n  yield takeEvery(CREATE_SNIPPETS, workerCreateSnippet);\n}","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/snippets/sagas.js"],"names":["takeEvery","put","call","GET_SNIPPETS","CREATE_SNIPPETS","putCreatedSnippets","putGottenSnippets","putAddedComponenInProject","fetchWithAuth","config","addNotify","workerGetSnippets","action","response","URL_SNIPPET_API","payload","success","message","workerCreateSnippet","console","log","watchGetSnippets","watchCreateSnippet"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,SACEC,YADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,iBAJF,QAKO,WALP;AAOA,SAAQC,yBAAR,QAAwC,qBAAxC;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,mBAA1B,C,CAEA;;AAEA,UAAUC,iBAAV,CAA4BC,MAA5B,EAAoC;AAEnC,QAAMC,QAAQ,GAAG,MAAML,aAAa,CAAE,GAAEC,MAAM,CAACK,eAAgB,aAAYF,MAAM,CAACG,OAAQ,EAAtD,CAApC;AAEA,MAAIF,QAAQ,IAAIA,QAAQ,CAACG,OAAT,KAAqB,IAArC,EACG,MAAMf,GAAG,CAACK,iBAAiB,CAACO,QAAD,CAAlB,CAAT,CADH,KAGG,MAAMZ,GAAG,CAACS,SAAS,CAAC;AAACO,IAAAA,OAAO,EAAEJ,QAAQ,CAACI;AAAnB,GAAD,CAAV,CAAT;AACH;;AAED,UAAUC,mBAAV,CAA8BN,MAA9B,EAAsC;AAErC,QAAMC,QAAQ,GAAG,MAAML,aAAa,CAAE,GAAEC,MAAM,CAACK,eAAgB,aAAYF,MAAM,CAACG,OAAQ,EAAtD,EAAyD,MAAzD,EAAiEH,MAAM,CAACG,OAAxE,CAApC;AAECI,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAJoC,CAMrC;AACC;AACA;AACA;AACD,C,CAGD;;;AAEA,OAAO,UAAUQ,gBAAV,GAA6B;AAClC,QAAMrB,SAAS,CAACG,YAAD,EAAeQ,iBAAf,CAAf;AACD;AAED,OAAO,UAAUW,kBAAV,GAA+B;AACpC,QAAMtB,SAAS,CAACI,eAAD,EAAkBc,mBAAlB,CAAf;AACD","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects';\r\nimport {\r\n  GET_SNIPPETS,\r\n  CREATE_SNIPPETS,\r\n  putCreatedSnippets,\r\n  putGottenSnippets\r\n} from './actions';\r\n\r\nimport {putAddedComponenInProject} from '../projects/actions';\r\n\r\nimport fetchWithAuth from '../fetchWithAuth';\r\nimport * as config from '../config';\r\nimport { addNotify } from '../notify/actions';\r\n\r\n// Workers\r\n\r\nfunction* workerGetSnippets(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(`${config.URL_SNIPPET_API}/component${action.payload}`);\r\n\r\n\tif (response && response.success === true) \r\n    yield put(putGottenSnippets(response));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerCreateSnippet(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(`${config.URL_SNIPPET_API}/component${action.payload}`, 'POST', action.payload);\r\n\r\n  console.log(response);\r\n\r\n\t// if (response && response.success === true) \r\n  //   yield put(putCreatedSnippets(response));\r\n  // else \r\n  //   yield put(addNotify({message: response.message}));\r\n}\r\n\r\n\r\n// Watchers \r\n\r\nexport function* watchGetSnippets() {\r\n  yield takeEvery(GET_SNIPPETS, workerGetSnippets);\r\n}\r\n\r\nexport function* watchCreateSnippet() {\r\n  yield takeEvery(CREATE_SNIPPETS, workerCreateSnippet);\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}