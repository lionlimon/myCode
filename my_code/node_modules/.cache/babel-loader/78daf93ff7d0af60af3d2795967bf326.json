{"ast":null,"code":"import { PUT_GOTTEN_USER_PROJECTS, PUT_CREATED_USER_PROJECT, PUT_DELETED_USER_PROJECT, PUT_ADDED_USER_IN_PROJECT } from './actions';\nconst initialState = {\n  myProjects: {}\n};\nexport const projectsReduser = (state = initialState, action) => {\n  console.log(action.payload, 'Новая дата');\n\n  switch (action.type) {\n    case PUT_GOTTEN_USER_PROJECTS:\n      return {\n        myProjects: action.payload\n      };\n\n    case PUT_CREATED_USER_PROJECT:\n      return {\n        myProjects: { ...state.myProjects,\n          data: [...state.myProject.data, ...action.payload]\n        }\n      };\n\n    case PUT_DELETED_USER_PROJECT:\n      return {\n        myProjects: [state.myProjects, action.payload]\n      };\n\n    case PUT_ADDED_USER_IN_PROJECT:\n      const newData = state.myProjects.data.map(project => {\n        if (project.id === action.payload.data['project_user']['project_id']) return { ...project,\n          users: { ...project.users,\n            ...[action.payload.data.user]\n          }\n        };\n        return project;\n      });\n      const newState = {\n        myProjects: { ...state.myProjects,\n          data: [...state.myProjects.data, ...newData]\n        }\n      };\n      return {\n        newState\n      };\n      break;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/projects/reducers.js"],"names":["PUT_GOTTEN_USER_PROJECTS","PUT_CREATED_USER_PROJECT","PUT_DELETED_USER_PROJECT","PUT_ADDED_USER_IN_PROJECT","initialState","myProjects","projectsReduser","state","action","console","log","payload","type","data","myProject","newData","map","project","id","users","user","newState"],"mappings":"AAAA,SACEA,wBADF,EAEEC,wBAFF,EAGEC,wBAHF,EAIEC,yBAJF,QAKO,WALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AADO,CAArB;AAIA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC/DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB,EAA4B,YAA5B;;AACA,UAAQH,MAAM,CAACI,IAAf;AAEE,SAAKZ,wBAAL;AAA+B,aAAQ;AACrCK,QAAAA,UAAU,EAAEG,MAAM,CAACG;AADkB,OAAR;;AAI/B,SAAKV,wBAAL;AAA+B,aAAQ;AACrCI,QAAAA,UAAU,EAAE,EAAC,GAAGE,KAAK,CAACF,UAAV;AAAsBQ,UAAAA,IAAI,EAAE,CAAC,GAAGN,KAAK,CAACO,SAAN,CAAgBD,IAApB,EAA0B,GAAGL,MAAM,CAACG,OAApC;AAA5B;AADyB,OAAR;;AAI/B,SAAKT,wBAAL;AAA+B,aAAQ;AACrCG,QAAAA,UAAU,EAAE,CAACE,KAAK,CAACF,UAAP,EAAmBG,MAAM,CAACG,OAA1B;AADyB,OAAR;;AAI/B,SAAKR,yBAAL;AACE,YAAMY,OAAO,GAAGR,KAAK,CAACF,UAAN,CAAiBQ,IAAjB,CAAsBG,GAAtB,CAA0BC,OAAO,IAAI;AAEnD,YAAIA,OAAO,CAACC,EAAR,KAAeV,MAAM,CAACG,OAAP,CAAeE,IAAf,CAAoB,cAApB,EAAoC,YAApC,CAAnB,EACE,OAAO,EAAC,GAAGI,OAAJ;AAAaE,UAAAA,KAAK,EAAE,EAAC,GAAGF,OAAO,CAACE,KAAZ;AAAmB,eAAG,CAACX,MAAM,CAACG,OAAP,CAAeE,IAAf,CAAoBO,IAArB;AAAtB;AAApB,SAAP;AAEF,eAAOH,OAAP;AACD,OANe,CAAhB;AAUA,YAAMI,QAAQ,GAAG;AAAChB,QAAAA,UAAU,EAAE,EAAC,GAAGE,KAAK,CAACF,UAAV;AAAsBQ,UAAAA,IAAI,EAAE,CAAC,GAAGN,KAAK,CAACF,UAAN,CAAiBQ,IAArB,EAA2B,GAAGE,OAA9B;AAA5B;AAAb,OAAjB;AACA,aAAQ;AACNM,QAAAA;AADM,OAAR;AAGA;;AAEF;AAAS,aAAOd,KAAP;AA/BX;AAiCD,CAnCM","sourcesContent":["import { \r\n  PUT_GOTTEN_USER_PROJECTS,\r\n  PUT_CREATED_USER_PROJECT,\r\n  PUT_DELETED_USER_PROJECT,\r\n  PUT_ADDED_USER_IN_PROJECT\r\n} from './actions';\r\n\r\nconst initialState = {\r\n  myProjects: {},\r\n};\r\n\r\nexport const projectsReduser = (state = initialState, action) => {\r\n  console.log(action.payload, 'Новая дата');\r\n  switch (action.type) {\r\n\r\n    case PUT_GOTTEN_USER_PROJECTS: return ({\r\n      myProjects: action.payload\r\n    });\r\n\r\n    case PUT_CREATED_USER_PROJECT: return ({\r\n      myProjects: {...state.myProjects, data: [...state.myProject.data, ...action.payload]}\r\n    });\r\n\r\n    case PUT_DELETED_USER_PROJECT: return ({\r\n      myProjects: [state.myProjects, action.payload]\r\n    });\r\n    \r\n    case PUT_ADDED_USER_IN_PROJECT: \r\n      const newData = state.myProjects.data.map(project => {\r\n        \r\n        if (project.id === action.payload.data['project_user']['project_id']) \r\n          return {...project, users: {...project.users, ...[action.payload.data.user]}}\r\n        \r\n        return project;\r\n      });\r\n      \r\n      \r\n\r\n      const newState = {myProjects: {...state.myProjects, data: [...state.myProjects.data, ...newData]}};\r\n      return ({\r\n        newState\r\n      });\r\n      break;\r\n\r\n    default: return state;  \r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}