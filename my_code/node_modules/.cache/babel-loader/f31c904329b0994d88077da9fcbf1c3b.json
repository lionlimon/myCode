{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { SEND_REGISTER_DATA, SEND_LOGIN_DATA, putRegisterData, putFailedRegisterData, sendLoginData, putLoginData } from './actions';\nimport * as config from '../config';\n\nfunction fetchRegisterData(data) {\n  return fetch(config.URL_REGISTER_API, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.status == 404 || response.ok ? response.json() : Promise.reject(response)).catch(e => console.error(e));\n}\n\nfunction* workerRegisterData(action) {\n  const data = yield call(fetchRegisterData, action.payload);\n  if (data.success) yield put(putRegisterData(data));else yield put(putFailedRegisterData(data));\n}\n\nfunction* workerLoginData(action) {\n  console.log('работает', action.payload); // const data = yield call(fetchRegisterData, action.payload);\n  // if (data.success) \t\n  //   yield put(putLoginData(data));\n  // else \n  //   yield put(putFailedRegisterData(data));\n}\n\nexport function* watchRegisterData() {\n  yield takeEvery(SEND_REGISTER_DATA, workerRegisterData);\n}\nexport function* watchLoginData() {\n  yield takeEvery(SEND_LOGIN_DATA, workerLoginData);\n} // export function* watchRegisterPutData() {\n//   yield takeEvery(PUT_REGISTER_DATA, workerRegisterData);\n// }","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/auth/sagas.js"],"names":["takeEvery","put","call","SEND_REGISTER_DATA","SEND_LOGIN_DATA","putRegisterData","putFailedRegisterData","sendLoginData","putLoginData","config","fetchRegisterData","data","fetch","URL_REGISTER_API","method","body","JSON","stringify","headers","then","response","status","ok","json","Promise","reject","catch","e","console","error","workerRegisterData","action","payload","success","workerLoginData","log","watchRegisterData","watchLoginData"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAASC,kBAAT,EAA6BC,eAA7B,EAA8CC,eAA9C,EAA+DC,qBAA/D,EAAsFC,aAAtF,EAAqGC,YAArG,QAAyH,WAAzH;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;;AAGA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAE/B,SAAOC,KAAK,CAACH,MAAM,CAACI,gBAAR,EAA0B;AACpCC,IAAAA,MAAM,EAAE,MAD4B;AAEpCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAF8B;AAGpCO,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAH2B,GAA1B,CAAL,CAOJC,IAPI,CAOCC,QAAQ,IAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACE,EAAnC,GAAwCF,QAAQ,CAACG,IAAT,EAAxC,GAA0DC,OAAO,CAACC,MAAR,CAAeL,QAAf,CAPvE,EAQJM,KARI,CAQGC,CAAD,IAAOC,OAAO,CAACC,KAAR,CAAcF,CAAd,CART,CAAP;AAWD;;AAED,UAAUG,kBAAV,CAA6BC,MAA7B,EAAqC;AAEpC,QAAMpB,IAAI,GAAG,MAAMT,IAAI,CAACQ,iBAAD,EAAoBqB,MAAM,CAACC,OAA3B,CAAvB;AAEA,MAAIrB,IAAI,CAACsB,OAAT,EACG,MAAMhC,GAAG,CAACI,eAAe,CAACM,IAAD,CAAhB,CAAT,CADH,KAGG,MAAMV,GAAG,CAACK,qBAAqB,CAACK,IAAD,CAAtB,CAAT;AAGH;;AAED,UAAUuB,eAAV,CAA0BH,MAA1B,EAAkC;AAChCH,EAAAA,OAAO,CAACO,GAAR,CAAY,UAAZ,EAAwBJ,MAAM,CAACC,OAA/B,EADgC,CAEjC;AAEA;AACC;AACA;AACA;AAGD;;AAED,OAAO,UAAUI,iBAAV,GAA8B;AACnC,QAAMpC,SAAS,CAACG,kBAAD,EAAqB2B,kBAArB,CAAf;AACD;AAED,OAAO,UAAUO,cAAV,GAA2B;AAChC,QAAMrC,SAAS,CAACI,eAAD,EAAkB8B,eAAlB,CAAf;AACD,C,CAED;AACA;AACA","sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport { SEND_REGISTER_DATA, SEND_LOGIN_DATA, putRegisterData, putFailedRegisterData, sendLoginData, putLoginData } from './actions';\r\nimport * as config from '../config';\r\n\r\n\r\nfunction fetchRegisterData(data) {\r\n\r\n  return fetch(config.URL_REGISTER_API, { \r\n    method: 'POST', \r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n  })\r\n    .then(response => response.status == 404 || response.ok ? response.json() : Promise.reject(response))\r\n    .catch((e) => console.error(e));\r\n  \r\n\r\n}\r\n\r\nfunction* workerRegisterData(action) {\r\n  \r\n\tconst data = yield call(fetchRegisterData, action.payload);\r\n  \r\n\tif (data.success) \t\r\n    yield put(putRegisterData(data));\r\n  else \r\n    yield put(putFailedRegisterData(data));\r\n\t\r\n  \r\n}\r\n\r\nfunction* workerLoginData(action) {\r\n  console.log('работает', action.payload)\r\n\t// const data = yield call(fetchRegisterData, action.payload);\r\n  \r\n\t// if (data.success) \t\r\n  //   yield put(putLoginData(data));\r\n  // else \r\n  //   yield put(putFailedRegisterData(data));\r\n\t\r\n  \r\n}\r\n\r\nexport function* watchRegisterData() {\r\n  yield takeEvery(SEND_REGISTER_DATA, workerRegisterData);\r\n}\r\n\r\nexport function* watchLoginData() {\r\n  yield takeEvery(SEND_LOGIN_DATA, workerLoginData);\r\n}\r\n\r\n// export function* watchRegisterPutData() {\r\n//   yield takeEvery(PUT_REGISTER_DATA, workerRegisterData);\r\n// }"]},"metadata":{},"sourceType":"module"}