{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\limon\\\\Desktop\\\\my projects\\\\myCode\\\\myCode.React\\\\my_code\\\\src\\\\components\\\\Project\\\\Project.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport Sidebar from '../Sidebar/Sidebar';\nimport CreateComponentForm from './CreateComponentForm';\nimport Empty from '../Empty/Empty';\nimport Loader from '../UI/Loader/Loader';\nimport { matchPath, Switch, Route } from 'react-router-dom';\nimport Snippets from './Snippets';\nimport Editor from '../Editor/Editor';\nconst projects = [{\n  id: 0,\n  name: 'Super project'\n}];\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      snippets,\n      sidebarItems: [],\n      sidebarIsOpen: true\n    };\n    this.openCreateComponentForm = this.openCreateComponentForm.bind(this);\n    this.onClickSaveButton = this.onClickSaveButton.bind(this);\n    this.match = matchPath(props.location.pathname, {\n      path: '/project:projectId'\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.currentProject.data === undefined) this.props.getProjectById(this.match.params.projectId);\n    if (this.props.components.componentsList.data === undefined) this.props.getComponents(this.match.params.projectId);\n  }\n\n  toggleSidebar() {\n    this.setState({\n      sidebarIsOpen: !this.state.sidebarIsOpen\n    });\n  }\n\n  addSnippet(e) {\n    e.preventDefault();\n    if (!this.state.newSnippetType.length > 1) return false;\n    const newSnippet = {\n      type: this.state.newSnippetType,\n      id: this.state.newSnippetType + Number(new Date())\n    };\n    this.setState({\n      snippets: this.state.snippets.concat(newSnippet)\n    });\n  }\n\n  setNewSnippetType(e) {\n    this.setState({\n      newSnippetType: e.target.value\n    });\n  }\n\n  removeSnippet(e) {\n    const id = e.currentTarget.attributes.id.value;\n    const cleanedSnippets = this.state.snippets.filter(snippet => snippet.id != id);\n    if (window.confirm('Really?')) this.setState({\n      snippets: cleanedSnippets\n    });\n  }\n\n  onClickSaveButton({\n    data,\n    snippetId\n  }) {\n    this.props.updateSnippet({\n      data,\n      snippetId\n    });\n  }\n\n  openCreateComponentForm() {\n    this.props.openPopup( /*#__PURE__*/React.createElement(CreateComponentForm, {\n      closePopup: this.props.closePopup,\n      addNotify: this.props.addNotify,\n      createComponent: this.props.createComponent,\n      projectId: this.match.params.projectId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  render() {\n    const contentClass = this.state.sidebarIsOpen ? 'content' : 'content hidden-side';\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      toggleSidebar: this.toggleSidebar.bind(this),\n      isOpen: this.state.sidebarIsOpen,\n      currentProject: this.props.currentProject,\n      menuItems: this.props.currentProject.projectStructure,\n      openCreateComponentForm: this.openCreateComponentForm,\n      projectId: this.match.params.projectId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: contentClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, this.props.components.componentsList.data === undefined && /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 71\n      }\n    }), this.props.components.componentsList && this.props.components.componentsList.data && this.props.components.componentsList.data.length == 0 && /*#__PURE__*/React.createElement(Empty, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"\\u0412 \\u044D\\u0442\\u043E\\u043C \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0435 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u043A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442\\u043E\\u0432\"), /*#__PURE__*/React.createElement(Route, {\n      path: \"/project:projectId/component:componentId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Snippets, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/project:projectId/component:componentId/snippet:snippetId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Editor, Object.assign({\n      onClickSaveButton: this.onClickSaveButton\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n}\n\nexport default Project;","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/components/Project/Project.jsx"],"names":["React","Component","Fragment","Sidebar","CreateComponentForm","Empty","Loader","matchPath","Switch","Route","Snippets","Editor","projects","id","name","Project","constructor","props","state","snippets","sidebarItems","sidebarIsOpen","openCreateComponentForm","bind","onClickSaveButton","match","location","pathname","path","componentDidMount","currentProject","data","undefined","getProjectById","params","projectId","components","componentsList","getComponents","toggleSidebar","setState","addSnippet","e","preventDefault","newSnippetType","length","newSnippet","type","Number","Date","concat","setNewSnippetType","target","value","removeSnippet","currentTarget","attributes","cleanedSnippets","filter","snippet","window","confirm","snippetId","updateSnippet","openPopup","closePopup","addNotify","createComponent","render","contentClass","projectStructure"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport CreateComponentForm from './CreateComponentForm';\r\nimport Empty from '../Empty/Empty';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport {matchPath, Switch, Route} from 'react-router-dom';\r\nimport Snippets from './Snippets';\r\nimport Editor from '../Editor/Editor';\r\n\r\n\r\n\r\nconst projects = [\r\n  { id: 0, name: 'Super project' }\r\n];\r\n\r\nclass Project extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      snippets,\r\n      sidebarItems: [],\r\n      sidebarIsOpen: true,\r\n    }\r\n\r\n    this.openCreateComponentForm = this.openCreateComponentForm.bind(this);\r\n    this.onClickSaveButton = this.onClickSaveButton.bind(this);\r\n\r\n    this.match = matchPath(props.location.pathname, {\r\n      path: '/project:projectId'\r\n    });\r\n\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n\r\n    if (this.props.currentProject.data === undefined)\r\n      this.props.getProjectById(this.match.params.projectId);\r\n\r\n    if (this.props.components.componentsList.data === undefined)\r\n      this.props.getComponents(this.match.params.projectId);\r\n  }\r\n\r\n  \r\n  toggleSidebar() {\r\n    this.setState({ sidebarIsOpen: !this.state.sidebarIsOpen });\r\n  }\r\n\r\n  addSnippet(e) {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.newSnippetType.length > 1)\r\n      return false;\r\n    \r\n    const newSnippet = {\r\n      type: this.state.newSnippetType, \r\n      id: this.state.newSnippetType + Number(new Date()),\r\n    }\r\n\r\n    this.setState({\r\n      snippets: this.state.snippets.concat(newSnippet),\r\n    });\r\n\r\n  }\r\n\r\n  setNewSnippetType(e) {\r\n    this.setState({ newSnippetType: e.target.value });\r\n  }\r\n\r\n  removeSnippet(e) {\r\n    const id = e.currentTarget.attributes.id.value;\r\n    const cleanedSnippets = this.state.snippets.filter(snippet => snippet.id != id); \r\n    \r\n    if (window.confirm('Really?'))\r\n      this.setState({snippets: cleanedSnippets});\r\n  } \r\n\r\n\r\n  onClickSaveButton({data, snippetId}) {\r\n    \r\n    this.props.updateSnippet({data, snippetId});\r\n  }\r\n\r\n  openCreateComponentForm() {\r\n    this.props.openPopup(\r\n      <CreateComponentForm \r\n        closePopup={this.props.closePopup}\r\n        addNotify={this.props.addNotify}\r\n        createComponent={this.props.createComponent}\r\n        projectId={this.match.params.projectId}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const contentClass = this.state.sidebarIsOpen ? 'content' : 'content hidden-side';\r\n    return (\r\n      <Fragment>\r\n        <Sidebar \r\n          toggleSidebar={this.toggleSidebar.bind(this)} \r\n          isOpen={this.state.sidebarIsOpen} \r\n          currentProject={this.props.currentProject}\r\n          menuItems={this.props.currentProject.projectStructure} \r\n          openCreateComponentForm={this.openCreateComponentForm}\r\n          projectId={this.match.params.projectId}\r\n        />\r\n        <div className={contentClass}>\r\n          {this.props.components.componentsList.data === undefined && <Loader />}\r\n          {this.props.components.componentsList && \r\n            this.props.components.componentsList.data && \r\n            this.props.components.componentsList.data.length == 0 && \r\n            <Empty>В этом проекте пока нет компонентов</Empty>}\r\n\r\n\r\n          \r\n          <Route path=\"/project:projectId/component:componentId\">\r\n            <Snippets {...this.props} />\r\n          </Route>\r\n          <Route exact path=\"/project:projectId/component:componentId/snippet:snippetId\">\r\n            <Editor onClickSaveButton={this.onClickSaveButton} {...this.props} />\r\n          </Route>\r\n          \r\n\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Project;"]},"metadata":{},"sourceType":"module"}