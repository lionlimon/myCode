{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\limon\\\\Desktop\\\\my projects\\\\myCode\\\\myCode.React\\\\my_code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{ADD_NOTIFY,HIDE_NOTIFY}from'./actions';var initialState={notifyList:[]};export var notifyReducer=function notifyReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ADD_NOTIFY:return _objectSpread({},state,{notifyList:state.notifyList.concat(action.payload)});case HIDE_NOTIFY:return _objectSpread({},state,{notifyList:state.notifyList.map(function(item){if(item.id===action.payload)return _objectSpread({},item,{isVisible:false});else return item;})});default:return state;}};","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/notify/reducers.js"],"names":["ADD_NOTIFY","HIDE_NOTIFY","initialState","notifyList","notifyReducer","state","action","type","concat","payload","map","item","id","isVisible"],"mappings":"gMAAA,OAASA,UAAT,CAAqBC,WAArB,KAAwC,WAAxC,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,UAAU,CAAE,EADO,CAArB,CAIA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CAC7D,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKP,CAAAA,UAAL,CAAiB,wBACZK,KADY,EAEfF,UAAU,CAAEE,KAAK,CAACF,UAAN,CAAiBK,MAAjB,CAAwBF,MAAM,CAACG,OAA/B,CAFG,GAKjB,IAAKR,CAAAA,WAAL,CAAkB,wBACbI,KADa,EAEhBF,UAAU,CAAEE,KAAK,CAACF,UAAN,CAAiBO,GAAjB,CAAqB,SAACC,IAAD,CAAU,CACzC,GAAIA,IAAI,CAACC,EAAL,GAAYN,MAAM,CAACG,OAAvB,CACE,wBAAYE,IAAZ,EAAkBE,SAAS,CAAE,KAA7B,GADF,IAGE,OAAOF,CAAAA,IAAP,CACH,CALW,CAFI,GAUlB,QAAS,MAAON,CAAAA,KAAP,CAhBX,CAkBD,CAnBM","sourcesContent":["import { ADD_NOTIFY, HIDE_NOTIFY } from './actions';\r\n\r\nconst initialState = {\r\n  notifyList: []\r\n};\r\n\r\nexport const notifyReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_NOTIFY: return ({\r\n      ...state, \r\n      notifyList: state.notifyList.concat(action.payload)\r\n    });\r\n\r\n    case HIDE_NOTIFY: return({\r\n      ...state, \r\n      notifyList: state.notifyList.map((item) => {\r\n        if (item.id === action.payload) \r\n          return { ...item, isVisible: false };\r\n        else \r\n          return item;\r\n      })\r\n    });\r\n\r\n    default: return state;  \r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}