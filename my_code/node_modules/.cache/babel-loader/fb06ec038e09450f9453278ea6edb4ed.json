{"ast":null,"code":"import { PUT_GOTTEN_USER_PROJECTS, PUT_GOTTEN_PROJECT_BY_ID, PUT_GOTTEN_OTHER_PROJECTS, PUT_CREATED_USER_PROJECT, PUT_DELETED_USER_PROJECT, PUT_ADDED_USER_IN_PROJECT, PUT_DELETED_USER_IN_PROJECT, PUT_ADDED_COMPONENT_IN_PROJECT, PUT_DELETED_COMPONENT_IN_PROJECT } from './actions';\nimport store from '../index';\nconst initialState = {\n  myProjects: {},\n  otherProjects: {},\n  currentProject: {}\n}; // selectors \n\nfunction deleteUserById(users, id) {\n  return users.filter(user => user.id != id);\n}\n\nexport const projectsReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case PUT_GOTTEN_USER_PROJECTS:\n      return { ...state,\n        myProjects: action.payload\n      };\n\n    case PUT_ADDED_COMPONENT_IN_PROJECT:\n      let updatedCategories;\n      console.log(state.currentProject.categories);\n\n      if (state.currentProject.categories.filter(category => category.id == action.payload.data.category.id).length > 0) {\n        updatedCategories = state.currentProject.categories;\n      } else {\n        updatedCategories = [...state.currentProject.categories, action.payload.data.category];\n      }\n\n      let updatedProjectStructure = updatedCategories.map(category => {\n        return { ...category,\n          components: [...state.currentProject.components, action.payload.data.component].filter(component => category.id == component['category_id'])\n        };\n      });\n      return { ...state,\n        currentProject: { ...state.currentProject,\n          components: [...state.currentProject.components, action.payload.data.component],\n          categories: [...state.currentProject.categories, action.payload.data.category],\n          projectStructure: updatedProjectStructure\n        }\n      };\n\n    case PUT_DELETED_COMPONENT_IN_PROJECT:\n      return { ...state,\n        currentProject: { ...state.currentProject,\n          components: state.currentProject.components.filter(component => component.id != action.payload.data.id),\n          projectStructure: state.currentProject.categories.map(category => {\n            return { ...category,\n              components: state.currentProject.components.filter(component => category.id == component['category_id'] && category.id == action.payload.data.id)\n            };\n          })\n        }\n      };\n\n    case PUT_GOTTEN_PROJECT_BY_ID:\n      const projectStructure = action.payload.data.categories.map(category => {\n        return { ...category,\n          components: action.payload.data.components.filter(component => category.id == component['category_id'])\n        };\n      });\n      return { ...state,\n        currentProject: { ...action.payload.data,\n          projectStructure\n        }\n      };\n\n    case PUT_GOTTEN_OTHER_PROJECTS:\n      const filteredProjects = action.payload.data.map(project => {\n        return { ...project,\n          users: deleteUserById(project.users, action.payload.userId)\n        };\n      });\n      console.log(filteredProjects, action.payload);\n      console.log({ ...action.payload,\n        data: filteredProjects\n      });\n      return { ...state,\n        otherProjects: { ...action.payload,\n          data: filteredProjects\n        }\n      };\n\n    case PUT_CREATED_USER_PROJECT:\n      return { ...state,\n        myProjects: { ...state.myProjects,\n          data: [...state.myProjects.data, action.payload]\n        }\n      };\n\n    case PUT_DELETED_USER_PROJECT:\n      return { ...state,\n        myProjects: { ...state.myProjects,\n          data: state.myProjects.data.filter(project => project.id !== action.payload.data.id)\n        }\n      };\n\n    case PUT_ADDED_USER_IN_PROJECT:\n      let dataWithAddedUser = state.myProjects.data.map(project => {\n        if (project.id === action.payload.data['project_user']['project_id']) return { ...project,\n          users: [...(project.users || []), action.payload.data.user]\n        };\n        return project;\n      });\n      return { ...state,\n        myProjects: { ...state.myProjects,\n          data: dataWithAddedUser\n        }\n      };\n\n    case PUT_DELETED_USER_IN_PROJECT:\n      let dataWithOutAddedUser = state.myProjects.data.map(project => {\n        if (project.id == action.payload.data['project_id']) {\n          return { ...project,\n            users: project.users.filter(user => user.id != action.payload.data['user_id'])\n          };\n        }\n\n        return project;\n      });\n      return { ...state,\n        myProjects: { ...state.myProjects,\n          data: dataWithOutAddedUser\n        }\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/projects/reducers.js"],"names":["PUT_GOTTEN_USER_PROJECTS","PUT_GOTTEN_PROJECT_BY_ID","PUT_GOTTEN_OTHER_PROJECTS","PUT_CREATED_USER_PROJECT","PUT_DELETED_USER_PROJECT","PUT_ADDED_USER_IN_PROJECT","PUT_DELETED_USER_IN_PROJECT","PUT_ADDED_COMPONENT_IN_PROJECT","PUT_DELETED_COMPONENT_IN_PROJECT","store","initialState","myProjects","otherProjects","currentProject","deleteUserById","users","id","filter","user","projectsReduser","state","action","type","payload","updatedCategories","console","log","categories","category","data","length","updatedProjectStructure","map","components","component","projectStructure","filteredProjects","project","userId","dataWithAddedUser","dataWithOutAddedUser"],"mappings":"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","sourcesContent":["import { \r\n  PUT_GOTTEN_USER_PROJECTS,\r\n  PUT_GOTTEN_PROJECT_BY_ID,\r\n  PUT_GOTTEN_OTHER_PROJECTS,\r\n  PUT_CREATED_USER_PROJECT,\r\n  PUT_DELETED_USER_PROJECT,\r\n  PUT_ADDED_USER_IN_PROJECT,\r\n  PUT_DELETED_USER_IN_PROJECT,\r\n  PUT_ADDED_COMPONENT_IN_PROJECT,\r\n  PUT_DELETED_COMPONENT_IN_PROJECT\r\n} from './actions';\r\n\r\nimport store from '../index';\r\n\r\nconst initialState = {\r\n  myProjects: {},\r\n  otherProjects: {},\r\n  currentProject: {}\r\n};\r\n\r\n// selectors \r\nfunction deleteUserById(users, id) {\r\n  return users.filter(user => user.id != id);\r\n}\r\n\r\n\r\nexport const projectsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case PUT_GOTTEN_USER_PROJECTS: \r\n      return ({ \r\n        ...state,\r\n        myProjects: action.payload\r\n      });\r\n\r\n    case PUT_ADDED_COMPONENT_IN_PROJECT: \r\n      let updatedCategories;\r\n\r\n      console.log(state.currentProject.categories)\r\n      \r\n      if (state.currentProject.categories.filter(category => category.id == action.payload.data.category.id).length > 0) {\r\n        updatedCategories = state.currentProject.categories;\r\n      } else {\r\n        updatedCategories = [\r\n          ...state.currentProject.categories, \r\n          action.payload.data.category\r\n        ];\r\n      }\r\n      let updatedProjectStructure = updatedCategories.map(category => {\r\n        \r\n        return {\r\n          ...category, \r\n          components: [\r\n            ...state.currentProject.components,\r\n            action.payload.data.component\r\n          ].filter(\r\n            component => category.id == component['category_id']\r\n          )\r\n        }\r\n      });\r\n\r\n      return ({ \r\n        ...state,\r\n        currentProject: { \r\n          ...state.currentProject,\r\n          components: [\r\n            ...state.currentProject.components, \r\n            action.payload.data.component\r\n          ],\r\n          categories: [\r\n            ...state.currentProject.categories, \r\n            action.payload.data.category\r\n          ],\r\n          projectStructure: updatedProjectStructure\r\n        }\r\n      });\r\n\r\n    case PUT_DELETED_COMPONENT_IN_PROJECT: \r\n    \r\n      return ({ \r\n        ...state,\r\n        currentProject: { \r\n          ...state.currentProject,\r\n          components: state.currentProject.components.filter(\r\n            component => component.id != action.payload.data.id\r\n          ), \r\n  \r\n          projectStructure: state.currentProject.categories.map(category => {\r\n            return {\r\n              ...category, \r\n              components: state.currentProject.components.filter(\r\n                component => category.id == component['category_id'] && \r\n                  category.id == action.payload.data.id\r\n              )\r\n            }\r\n          })\r\n        }\r\n      });\r\n     \r\n\r\n    case PUT_GOTTEN_PROJECT_BY_ID: \r\n      const projectStructure = action.payload.data.categories.map(category => {\r\n        return {\r\n          ...category, \r\n          components: action.payload.data.components.filter(\r\n            component => category.id == component['category_id']\r\n          )\r\n        }\r\n      });\r\n\r\n      return ({ \r\n        ...state,\r\n        currentProject: { ...action.payload.data, projectStructure}\r\n      });\r\n    \r\n    case PUT_GOTTEN_OTHER_PROJECTS: \r\n      const filteredProjects = action.payload.data.map(project => {\r\n        return {\r\n          ...project, \r\n          users: deleteUserById(project.users, action.payload.userId)\r\n        }\r\n      });\r\n\r\n      console.log(filteredProjects, action.payload);\r\n      \r\n      console.log({\r\n        ...action.payload, \r\n        data: filteredProjects\r\n      })\r\n\r\n      return ({ \r\n        ...state,\r\n        otherProjects: {\r\n          ...action.payload, \r\n          data: filteredProjects\r\n        }\r\n      });\r\n\r\n    case PUT_CREATED_USER_PROJECT: \r\n      return ({\r\n        ...state,\r\n        myProjects: {...state.myProjects, data: [...state.myProjects.data, action.payload]}\r\n      });\r\n\r\n    case PUT_DELETED_USER_PROJECT: \r\n      return ({\r\n        ...state,\r\n        myProjects: { \r\n          ...state.myProjects, \r\n          data: state.myProjects.data.filter(project => project.id !== action.payload.data.id)\r\n        }\r\n      });\r\n    \r\n    case PUT_ADDED_USER_IN_PROJECT: \r\n      let dataWithAddedUser = state.myProjects.data.map(project => {\r\n        \r\n        if (project.id === action.payload.data['project_user']['project_id']) \r\n          return {...project, users: [...project.users || [], action.payload.data.user]}\r\n        \r\n        return project;\r\n      });\r\n    \r\n\r\n      return ({ ...state, myProjects: {...state.myProjects, data: dataWithAddedUser}});\r\n     \r\n\r\n    case PUT_DELETED_USER_IN_PROJECT: \r\n      let dataWithOutAddedUser = state.myProjects.data.map(project => {\r\n        \r\n        if (project.id == action.payload.data['project_id']) {\r\n          return {...project, users: project.users.filter(user => user.id != action.payload.data['user_id'])}\r\n        }\r\n        \r\n        return project;\r\n      });\r\n      return ({...state, myProjects: {...state.myProjects, data: dataWithOutAddedUser}});\r\n\r\n    \r\n    default: return state;  \r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}