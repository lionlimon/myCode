{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { GET_USER_PROJECTS, GET_PROJECT_BY_ID, GET_OTHER_PROJECTS, CREATE_USER_PROJECT, DELETE_USER_PROJECT, ADD_USER_IN_PROJECT, DELETE_USER_IN_PROJECT, GET_SNIPPETS, CREATE_SNIPPETS, putDeletedUserProject, putGottenProjectById, putGottenUserProjects, putGottenOtherProjects, putCreatedUserProject, putAddedUserInProject, putDeletedUserInProject, putCreatedSnippets, putGottenSnippets, putUpdatedSnippet, UPDATE_SNIPPETS } from './actions';\nimport fetchWithAuth from '../fetchWithAuth';\nimport * as config from '../config';\nimport { addNotify } from '../notify/actions';\nimport store from '../index'; // Workers\n\nfunction* workerGetProjects(action) {\n  const response = yield fetchWithAuth(config.URL_PROJECT_API);\n  if (response && response.success === true) yield put(putGottenUserProjects(response));else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerGetProjectById(action) {\n  const response = yield fetchWithAuth(`${config.URL_PROJECT_API}/${action.payload}`);\n  if (response && response.success === true) yield put(putGottenProjectById(response));else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerGetOtherProjects(action) {\n  const response = yield fetchWithAuth(`${config.URL_PROJECT_API}/other`);\n  if (response && response.success === true) yield put(putGottenOtherProjects(response, store.getState().auth.user.id));else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerCreateProjects(action) {\n  const response = yield fetchWithAuth(config.URL_PROJECT_API, 'POST', action.payload);\n  ;\n  if (response && response.success === true) yield put(putCreatedUserProject(response.data));else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerDeleteProjects(action) {\n  const response = yield fetchWithAuth(`${config.URL_PROJECT_API}/${action.payload}`, 'DELETE');\n  if (response && response.success === true) yield put(putDeletedUserProject(response));else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerAddUserInProject(action) {\n  const response = yield fetchWithAuth(`${config.URL_PROJECT_API}/users`, 'POST', action.payload);\n  if (response && response.success === true) yield put(putAddedUserInProject(response));else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerDeleteUserInProject(action) {\n  const url = `${config.URL_PROJECT_API}/users/${action.payload.userId}_${action.payload.projectId}`;\n  const response = yield fetchWithAuth(url, 'DELETE');\n  if (response && response.success === true) yield put(putDeletedUserInProject(response));else yield put(addNotify({\n    message: response.message\n  }));\n} // Watchers \n\n\nexport function* watchGetProjects() {\n  yield takeEvery(GET_USER_PROJECTS, workerGetProjects);\n}\nexport function* watchGetProjectById() {\n  yield takeEvery(GET_PROJECT_BY_ID, workerGetProjectById);\n}\nexport function* watchGetOtherProjects() {\n  yield takeEvery(GET_OTHER_PROJECTS, workerGetOtherProjects);\n}\nexport function* watchCreateProjects() {\n  yield takeEvery(CREATE_USER_PROJECT, workerCreateProjects);\n}\nexport function* watchDeleteProjects() {\n  yield takeEvery(DELETE_USER_PROJECT, workerDeleteProjects);\n}\nexport function* watchAddUserInProject() {\n  yield takeEvery(ADD_USER_IN_PROJECT, workerAddUserInProject);\n}\nexport function* watchDeleteUserInProject() {\n  yield takeEvery(DELETE_USER_IN_PROJECT, workerDeleteUserInProject);\n}","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/projects/sagas.js"],"names":["takeEvery","put","call","GET_USER_PROJECTS","GET_PROJECT_BY_ID","GET_OTHER_PROJECTS","CREATE_USER_PROJECT","DELETE_USER_PROJECT","ADD_USER_IN_PROJECT","DELETE_USER_IN_PROJECT","GET_SNIPPETS","CREATE_SNIPPETS","putDeletedUserProject","putGottenProjectById","putGottenUserProjects","putGottenOtherProjects","putCreatedUserProject","putAddedUserInProject","putDeletedUserInProject","putCreatedSnippets","putGottenSnippets","putUpdatedSnippet","UPDATE_SNIPPETS","fetchWithAuth","config","addNotify","store","workerGetProjects","action","response","URL_PROJECT_API","success","message","workerGetProjectById","payload","workerGetOtherProjects","getState","auth","user","id","workerCreateProjects","data","workerDeleteProjects","workerAddUserInProject","workerDeleteUserInProject","url","userId","projectId","watchGetProjects","watchGetProjectById","watchGetOtherProjects","watchCreateProjects","watchDeleteProjects","watchAddUserInProject","watchDeleteUserInProject"],"mappings":"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","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects';\r\nimport {\r\n  GET_USER_PROJECTS,\r\n  GET_PROJECT_BY_ID,\r\n  GET_OTHER_PROJECTS,\r\n  CREATE_USER_PROJECT,\r\n  DELETE_USER_PROJECT,\r\n  ADD_USER_IN_PROJECT,\r\n  DELETE_USER_IN_PROJECT,\r\n  GET_SNIPPETS,\r\n  CREATE_SNIPPETS,\r\n  putDeletedUserProject,\r\n  putGottenProjectById,\r\n  putGottenUserProjects,\r\n  putGottenOtherProjects,\r\n  putCreatedUserProject,\r\n  putAddedUserInProject,\r\n  putDeletedUserInProject,\r\n  putCreatedSnippets,\r\n  putGottenSnippets,\r\n  putUpdatedSnippet,\r\n  UPDATE_SNIPPETS\r\n} from './actions';\r\n\r\nimport fetchWithAuth from '../fetchWithAuth';\r\nimport * as config from '../config';\r\nimport { addNotify } from '../notify/actions';\r\nimport store from '../index';\r\n\r\n// Workers\r\n\r\nfunction* workerGetProjects(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(config.URL_PROJECT_API);\r\n  \r\n\tif (response && response.success === true) \t\r\n    yield put(putGottenUserProjects(response));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerGetProjectById(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(`${config.URL_PROJECT_API}/${action.payload}`);\r\n  \r\n\tif (response && response.success === true) \t\r\n    yield put(putGottenProjectById(response));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerGetOtherProjects(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(`${config.URL_PROJECT_API}/other`);\r\n  \r\n\tif (response && response.success === true) \t\r\n    yield put(putGottenOtherProjects(response, store.getState().auth.user.id));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerCreateProjects(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(config.URL_PROJECT_API, 'POST', action.payload);;\r\n  \r\n\tif (response && response.success === true) \t\r\n    yield put(putCreatedUserProject(response.data));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerDeleteProjects(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(`${config.URL_PROJECT_API}/${action.payload}`, 'DELETE');\r\n  \r\n\tif (response && response.success === true) \t\r\n    yield put(putDeletedUserProject(response));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerAddUserInProject(action) {\r\n  const response = yield fetchWithAuth(`${config.URL_PROJECT_API}/users`, 'POST', action.payload);\r\n  \r\n\tif (response && response.success === true) \t\r\n    yield put(putAddedUserInProject(response));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerDeleteUserInProject(action) {\r\n  const url = `${config.URL_PROJECT_API}/users/${action.payload.userId}_${action.payload.projectId}`;\r\n  const response = yield fetchWithAuth(url, 'DELETE');\r\n\r\n\tif (response && response.success === true) \t\r\n    yield put(putDeletedUserInProject(response));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\n// Watchers \r\n\r\nexport function* watchGetProjects() {\r\n  yield takeEvery(GET_USER_PROJECTS, workerGetProjects);\r\n}\r\n\r\nexport function* watchGetProjectById() {\r\n  yield takeEvery(GET_PROJECT_BY_ID, workerGetProjectById);\r\n}\r\n\r\nexport function* watchGetOtherProjects() {\r\n  yield takeEvery(GET_OTHER_PROJECTS, workerGetOtherProjects);\r\n}\r\n\r\nexport function* watchCreateProjects() {\r\n  yield takeEvery(CREATE_USER_PROJECT, workerCreateProjects);\r\n}\r\n\r\nexport function* watchDeleteProjects() {\r\n  yield takeEvery(DELETE_USER_PROJECT, workerDeleteProjects);\r\n}\r\n\r\nexport function* watchAddUserInProject() {\r\n  yield takeEvery(ADD_USER_IN_PROJECT, workerAddUserInProject);\r\n}\r\n\r\nexport function* watchDeleteUserInProject() {\r\n  yield takeEvery(DELETE_USER_IN_PROJECT, workerDeleteUserInProject);\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}