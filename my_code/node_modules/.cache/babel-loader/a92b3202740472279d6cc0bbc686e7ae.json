{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\limon\\\\Desktop\\\\my projects\\\\myCode\\\\myCode.React\\\\my_code\\\\src\\\\components\\\\UI\\\\LineInput\\\\LineInput.jsx\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default function MiniBlockInput(props) {\n  let className = classNames({\n    'bottom-line-input': true,\n    [props.mixinClass]: props.mixinClass\n  });\n  if (props.type == 'select') return /*#__PURE__*/React.createElement(\"select\", {\n    className: \"bottom-line-input\",\n    name: \"select\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, props.placeholder), props.options.map(item => {\n    console.log(item);\n    return /*#__PURE__*/React.createElement(\"option\", {\n      name: item.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, item.text);\n  }));\n  return /*#__PURE__*/React.createElement(\"input\", {\n    name: props.name,\n    onChange: props.onChange,\n    value: props.value,\n    className: className,\n    type: props.type,\n    placeholder: props.placeholder,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/components/UI/LineInput/LineInput.jsx"],"names":["React","classNames","MiniBlockInput","props","className","mixinClass","type","placeholder","options","map","item","console","log","text","name","onChange","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAIA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAE5C,MAAIC,SAAS,GAAGH,UAAU,CAAC;AACzB,yBAAqB,IADI;AAEzB,KAACE,KAAK,CAACE,UAAP,GAAoBF,KAAK,CAACE;AAFD,GAAD,CAA1B;AAMA,MAAIF,KAAK,CAACG,IAAN,IAAc,QAAlB,EACE,oBACE;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,IAAI,EAAC,QAA3C;AAAoD,IAAA,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBH,KAAK,CAACI,WAAxB,CADF,EAEGJ,KAAK,CAACK,OAAN,CAAcC,GAAd,CAAkBC,IAAI,IAAI;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,wBACE;AAAQ,MAAA,IAAI,EAAEA,IAAI,CAACG,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BH,IAAI,CAACG,IAA/B,CADF;AAGD,GALA,CAFH,CADF;AAYF,sBACE;AACE,IAAA,IAAI,EAAEV,KAAK,CAACW,IADd;AAEE,IAAA,QAAQ,EAAEX,KAAK,CAACY,QAFlB;AAGE,IAAA,KAAK,EAAEZ,KAAK,CAACa,KAHf;AAIE,IAAA,SAAS,EAAEZ,SAJb;AAKE,IAAA,IAAI,EAAED,KAAK,CAACG,IALd;AAKoB,IAAA,WAAW,EAAEH,KAAK,CAACI,WALvC;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\n\r\n\r\nexport default function MiniBlockInput(props) {\r\n\r\n  let className = classNames({\r\n    'bottom-line-input': true, \r\n    [props.mixinClass]: props.mixinClass\r\n  });\r\n\r\n\r\n  if (props.type == 'select')\r\n    return (\r\n      <select className=\"bottom-line-input\" name=\"select\" required>\r\n        <option selected>{props.placeholder}</option>\r\n        {props.options.map(item => {\r\n          console.log(item);\r\n          return (\r\n            <option name={item.text}>{item.text}</option>\r\n          );\r\n        })}\r\n      </select>\r\n    );\r\n\r\n  return ( \r\n    <input \r\n      name={props.name} \r\n      onChange={props.onChange} \r\n      value={props.value} \r\n      className={className}\r\n      type={props.type} placeholder={props.placeholder} \r\n      required/>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}