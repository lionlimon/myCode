{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { GET_USER_PROJECTS, GET_OTHER_PROJECTS, CREATE_USER_PROJECT, DELETE_USER_PROJECT, ADD_USER_IN_PROJECT, DELETE_USER_IN_PROJECT, putDeletedUserProject, putGottenUserProjects, putGottenOtherProjects, putCreatedUserProject, putAddedUserInProject, putDeletedUserInProject } from './actions';\nimport fetchWithAuth from '../fetchWithAuth';\nimport * as config from '../config';\nimport { addNotify } from '../notify/actions';\nimport store from '../index'; // Workers\n\nfunction* workerGetProjects(action) {\n  const response = yield fetchWithAuth(config.URL_PROJECT_API);\n  if (response && response.success === true) yield put(putGottenUserProjects(response));else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerGetOtherProjects(action) {\n  const response = yield fetchWithAuth(`${config.URL_PROJECT_API}/other`);\n  if (response && response.success === true) yield put(putGottenOtherProjects(response, store.getState().auth.user.id));else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerCreateProjects(action) {\n  const response = yield fetchWithAuth(config.URL_PROJECT_API, 'POST', action.payload);\n  ;\n  if (response && response.success === true) yield put(putCreatedUserProject(response.data));else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerDeleteProjects(action) {\n  const response = yield fetchWithAuth(`${config.URL_PROJECT_API}/${action.payload}`, 'DELETE');\n  if (response && response.success === true) yield put(putDeletedUserProject(response));else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerAddUserInProject(action) {\n  const response = yield fetchWithAuth(`${config.URL_PROJECT_API}/users`, 'POST', action.payload);\n  if (response && response.success === true) yield put(putAddedUserInProject(response));else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerDeleteUserInProject(action) {\n  const url = `${config.URL_PROJECT_API}/users/${action.payload.userId}_${action.payload.projectId}`;\n  const response = yield fetchWithAuth(url, 'DELETE');\n  if (response && response.success === true) yield put(putDeletedUserInProject(response));else yield put(addNotify({\n    message: response.message\n  }));\n} // Watchers \n\n\nexport function* watchGetProjects() {\n  yield takeEvery(GET_USER_PROJECTS, workerGetProjects);\n}\nexport function* watchGetOtherProjects() {\n  yield takeEvery(GET_OTHER_PROJECTS, workerGetOtherProjects);\n}\nexport function* watchCreateProjects() {\n  yield takeEvery(CREATE_USER_PROJECT, workerCreateProjects);\n}\nexport function* watchDeleteProjects() {\n  yield takeEvery(DELETE_USER_PROJECT, workerDeleteProjects);\n}\nexport function* watchAddUserInProject() {\n  yield takeEvery(ADD_USER_IN_PROJECT, workerAddUserInProject);\n}\nexport function* watchDeleteUserInProject() {\n  yield takeEvery(DELETE_USER_IN_PROJECT, workerDeleteUserInProject);\n}","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/projects/sagas.js"],"names":["takeEvery","put","call","GET_USER_PROJECTS","GET_OTHER_PROJECTS","CREATE_USER_PROJECT","DELETE_USER_PROJECT","ADD_USER_IN_PROJECT","DELETE_USER_IN_PROJECT","putDeletedUserProject","putGottenUserProjects","putGottenOtherProjects","putCreatedUserProject","putAddedUserInProject","putDeletedUserInProject","fetchWithAuth","config","addNotify","store","workerGetProjects","action","response","URL_PROJECT_API","success","message","workerGetOtherProjects","getState","auth","user","id","workerCreateProjects","payload","data","workerDeleteProjects","workerAddUserInProject","workerDeleteUserInProject","url","userId","projectId","watchGetProjects","watchGetOtherProjects","watchCreateProjects","watchDeleteProjects","watchAddUserInProject","watchDeleteUserInProject"],"mappings":"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","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects';\r\nimport {\r\n  GET_USER_PROJECTS,\r\n  GET_OTHER_PROJECTS,\r\n  CREATE_USER_PROJECT,\r\n  DELETE_USER_PROJECT,\r\n  ADD_USER_IN_PROJECT,\r\n  DELETE_USER_IN_PROJECT,\r\n  putDeletedUserProject,\r\n  putGottenUserProjects,\r\n  putGottenOtherProjects,\r\n  putCreatedUserProject,\r\n  putAddedUserInProject,\r\n  putDeletedUserInProject,\r\n} from './actions';\r\n\r\nimport fetchWithAuth from '../fetchWithAuth';\r\nimport * as config from '../config';\r\nimport { addNotify } from '../notify/actions';\r\nimport store from '../index';\r\n\r\n// Workers\r\n\r\nfunction* workerGetProjects(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(config.URL_PROJECT_API);\r\n  \r\n\tif (response && response.success === true) \t\r\n    yield put(putGottenUserProjects(response));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerGetOtherProjects(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(`${config.URL_PROJECT_API}/other`);\r\n  \r\n\tif (response && response.success === true) \t\r\n    yield put(putGottenOtherProjects(response, store.getState().auth.user.id));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerCreateProjects(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(config.URL_PROJECT_API, 'POST', action.payload);;\r\n  \r\n\tif (response && response.success === true) \t\r\n    yield put(putCreatedUserProject(response.data));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerDeleteProjects(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(`${config.URL_PROJECT_API}/${action.payload}`, 'DELETE');\r\n  \r\n\tif (response && response.success === true) \t\r\n    yield put(putDeletedUserProject(response));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerAddUserInProject(action) {\r\n  const response = yield fetchWithAuth(`${config.URL_PROJECT_API}/users`, 'POST', action.payload);\r\n  \r\n\tif (response && response.success === true) \t\r\n    yield put(putAddedUserInProject(response));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerDeleteUserInProject(action) {\r\n  const url = `${config.URL_PROJECT_API}/users/${action.payload.userId}_${action.payload.projectId}`;\r\n  const response = yield fetchWithAuth(url, 'DELETE');\r\n\r\n\tif (response && response.success === true) \t\r\n    yield put(putDeletedUserInProject(response));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\n// Watchers \r\n\r\nexport function* watchGetProjects() {\r\n  yield takeEvery(GET_USER_PROJECTS, workerGetProjects);\r\n}\r\n\r\nexport function* watchGetOtherProjects() {\r\n  yield takeEvery(GET_OTHER_PROJECTS, workerGetOtherProjects);\r\n}\r\n\r\nexport function* watchCreateProjects() {\r\n  yield takeEvery(CREATE_USER_PROJECT, workerCreateProjects);\r\n}\r\n\r\nexport function* watchDeleteProjects() {\r\n  yield takeEvery(DELETE_USER_PROJECT, workerDeleteProjects);\r\n}\r\n\r\nexport function* watchAddUserInProject() {\r\n  yield takeEvery(ADD_USER_IN_PROJECT, workerAddUserInProject);\r\n}\r\n\r\nexport function* watchDeleteUserInProject() {\r\n  yield takeEvery(DELETE_USER_IN_PROJECT, workerDeleteUserInProject);\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}