{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\limon\\\\Desktop\\\\my projects\\\\myCode\\\\myCode.React\\\\my_code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(workerRegisterData),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(workerLoginData),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(workerGetUserData),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(watchRegisterData),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(watchLoginData),_marked6=/*#__PURE__*/_regeneratorRuntime.mark(watchGetUserData);import{takeEvery,put,call}from'redux-saga/effects';import{SEND_REGISTER_DATA,GET_USER_DATA,SEND_LOGIN_DATA,putAuthData,putUserData,putFailedAuthData}from'./actions';import{addNotify}from'../../store/notify/actions';import*as config from'../config';import fetchWithAuth from'../fetchWithAuth';// Workers\nfunction workerRegisterData(action){var response;return _regeneratorRuntime.wrap(function workerRegisterData$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchWithAuth(config.URL_REGISTER_API,'POST',action.payload);case 2:response=_context.sent;if(!(response&&response.success===true)){_context.next=8;break;}_context.next=6;return put(putAuthData(response));case 6:_context.next=10;break;case 8:_context.next=10;return put(putFailedAuthData(response));case 10:case\"end\":return _context.stop();}}},_marked);}function workerLoginData(action){var newData,respnse;return _regeneratorRuntime.wrap(function workerLoginData$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:newData={username:action.payload.email,password:action.payload.password,grant_type:'password',client_id:config.CLIENT_ID,client_secret:config.CLIENT_SECRET};_context2.next=3;return fetchWithAuth(config.URL_LOGIN_API,'POST',newData);case 3:respnse=_context2.sent;if(!respnse){_context2.next=9;break;}_context2.next=7;return put(putAuthData(respnse));case 7:_context2.next=11;break;case 9:_context2.next=11;return put(putFailedAuthData(respnse));case 11:case\"end\":return _context2.stop();}}},_marked2);}function workerGetUserData(action){var response;return _regeneratorRuntime.wrap(function workerGetUserData$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetchWithAuth(config.URL_USER_API);case 2:response=_context3.sent;if(!response){_context3.next=8;break;}_context3.next=6;return put(putUserData(response));case 6:_context3.next=9;break;case 8:addNotify({message:'Ошибка - данные пользователя не получены'});case 9:case\"end\":return _context3.stop();}}},_marked3);}// Wathcers\nexport function watchRegisterData(){return _regeneratorRuntime.wrap(function watchRegisterData$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return takeEvery(SEND_REGISTER_DATA,workerRegisterData);case 2:case\"end\":return _context4.stop();}}},_marked4);}export function watchLoginData(){return _regeneratorRuntime.wrap(function watchLoginData$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return takeEvery(SEND_LOGIN_DATA,workerLoginData);case 2:case\"end\":return _context5.stop();}}},_marked5);}export function watchGetUserData(){return _regeneratorRuntime.wrap(function watchGetUserData$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return takeEvery(GET_USER_DATA,workerGetUserData);case 2:case\"end\":return _context6.stop();}}},_marked6);}","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/auth/sagas.js"],"names":["workerRegisterData","workerLoginData","workerGetUserData","watchRegisterData","watchLoginData","watchGetUserData","takeEvery","put","call","SEND_REGISTER_DATA","GET_USER_DATA","SEND_LOGIN_DATA","putAuthData","putUserData","putFailedAuthData","addNotify","config","fetchWithAuth","action","URL_REGISTER_API","payload","response","success","newData","username","email","password","grant_type","client_id","CLIENT_ID","client_secret","CLIENT_SECRET","URL_LOGIN_API","respnse","URL_USER_API","message"],"mappings":"0OAeUA,kB,iDAUAC,e,iDAiBAC,iB,iDAYOC,iB,iDAIAC,c,iDAIAC,gB,EA9DjB,OAASC,SAAT,CAAoBC,GAApB,CAAyBC,IAAzB,KAAqC,oBAArC,CACA,OACCC,kBADD,CAECC,aAFD,CAGCC,eAHD,CAICC,WAJD,CAKCC,WALD,CAMCC,iBAND,KAOO,WAPP,CASA,OAASC,SAAT,KAA0B,4BAA1B,CACA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,WAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CAEA;AACA,QAAUjB,CAAAA,kBAAV,CAA6BkB,MAA7B,0JAEkB,MAAMD,CAAAA,aAAa,CAACD,MAAM,CAACG,gBAAR,CAA0B,MAA1B,CAAkCD,MAAM,CAACE,OAAzC,CAAnB,CAFlB,OAEOC,QAFP,oBAIKA,QAAQ,EAAIA,QAAQ,CAACC,OAAT,GAAqB,IAJtC,0CAKE,MAAMf,CAAAA,GAAG,CAACK,WAAW,CAACS,QAAD,CAAZ,CAAT,CALF,sDAOE,MAAMd,CAAAA,GAAG,CAACO,iBAAiB,CAACO,QAAD,CAAlB,CAAT,CAPF,uDAUA,QAAUpB,CAAAA,eAAV,CAA0BiB,MAA1B,iJACOK,OADP,CACiB,CACfC,QAAQ,CAAEN,MAAM,CAACE,OAAP,CAAeK,KADV,CAEfC,QAAQ,CAAER,MAAM,CAACE,OAAP,CAAeM,QAFV,CAGfC,UAAU,CAAE,UAHG,CAIfC,SAAS,CAAEZ,MAAM,CAACa,SAJH,CAKfC,aAAa,CAAEd,MAAM,CAACe,aALP,CADjB,kBASiB,MAAMd,CAAAA,aAAa,CAACD,MAAM,CAACgB,aAAR,CAAuB,MAAvB,CAA+BT,OAA/B,CAAnB,CATjB,OASOU,OATP,oBAWKA,OAXL,2CAYE,MAAM1B,CAAAA,GAAG,CAACK,WAAW,CAACqB,OAAD,CAAZ,CAAT,CAZF,wDAcE,MAAM1B,CAAAA,GAAG,CAACO,iBAAiB,CAACmB,OAAD,CAAlB,CAAT,CAdF,yDAiBA,QAAU/B,CAAAA,iBAAV,CAA4BgB,MAA5B,6JAEkB,MAAMD,CAAAA,aAAa,CAACD,MAAM,CAACkB,YAAR,CAAnB,CAFlB,OAEOb,QAFP,oBAIKA,QAJL,2CAKE,MAAMd,CAAAA,GAAG,CAACM,WAAW,CAACQ,QAAD,CAAZ,CAAT,CALF,qCAOEN,SAAS,CAAC,CAACoB,OAAO,CAAE,0CAAV,CAAD,CAAT,CAPF,wDAWA;AACA,MAAO,SAAUhC,CAAAA,iBAAV,iJACN,MAAMG,CAAAA,SAAS,CAACG,kBAAD,CAAqBT,kBAArB,CAAf,CADM,wDAIP,MAAO,SAAUI,CAAAA,cAAV,8IACN,MAAME,CAAAA,SAAS,CAACK,eAAD,CAAkBV,eAAlB,CAAf,CADM,wDAIP,MAAO,SAAUI,CAAAA,gBAAV,gJACN,MAAMC,CAAAA,SAAS,CAACI,aAAD,CAAgBR,iBAAhB,CAAf,CADM","sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport { \r\n\tSEND_REGISTER_DATA, \r\n\tGET_USER_DATA,\r\n\tSEND_LOGIN_DATA, \r\n\tputAuthData, \r\n\tputUserData,\r\n\tputFailedAuthData \r\n} from './actions';\r\n\r\nimport { addNotify } from '../../store/notify/actions';\r\nimport * as config from '../config';\r\nimport fetchWithAuth from '../fetchWithAuth';\r\n\r\n// Workers\r\nfunction* workerRegisterData(action) {\r\n\t\r\n\tconst response = yield fetchWithAuth(config.URL_REGISTER_API, 'POST', action.payload);\r\n\r\n\tif (response && response.success === true) \t\r\n\t\tyield put(putAuthData(response));\r\n\telse \r\n\t\tyield put(putFailedAuthData(response));\r\n}\r\n\r\nfunction* workerLoginData(action) {\r\n\tconst newData = {\r\n\t\tusername: action.payload.email,\r\n\t\tpassword: action.payload.password,\r\n\t\tgrant_type: 'password',\r\n\t\tclient_id: config.CLIENT_ID,\r\n\t\tclient_secret: config.CLIENT_SECRET\r\n\t}\r\n\r\n\tconst respnse = yield fetchWithAuth(config.URL_LOGIN_API, 'POST', newData);\r\n\t\r\n\tif (respnse) \t\r\n\t\tyield put(putAuthData(respnse));\r\n\telse \r\n\t\tyield put(putFailedAuthData(respnse));\r\n}\r\n\r\nfunction* workerGetUserData(action) {\r\n\t\r\n\tconst response = yield fetchWithAuth(config.URL_USER_API);\r\n\r\n\tif (response) \t\r\n\t\tyield put(putUserData(response));\r\n\telse \r\n\t\taddNotify({message: 'Ошибка - данные пользователя не получены'});\r\n}\r\n\r\n\r\n// Wathcers\r\nexport function* watchRegisterData() {\r\n\tyield takeEvery(SEND_REGISTER_DATA, workerRegisterData);\r\n}\r\n\r\nexport function* watchLoginData() {\r\n\tyield takeEvery(SEND_LOGIN_DATA, workerLoginData);\r\n}\r\n\r\nexport function* watchGetUserData() {\r\n\tyield takeEvery(GET_USER_DATA, workerGetUserData);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}