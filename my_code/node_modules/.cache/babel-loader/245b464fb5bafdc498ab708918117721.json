{"ast":null,"code":"import { PUT_GOTTEN_USER_PROJECTS, PUT_GOTTEN_PROJECT_BY_ID, PUT_GOTTEN_OTHER_PROJECTS, PUT_CREATED_USER_PROJECT, PUT_DELETED_USER_PROJECT, PUT_ADDED_USER_IN_PROJECT, PUT_DELETED_USER_IN_PROJECT } from './actions';\nimport store from '../index';\nconst initialState = {\n  myProjects: {},\n  otherProjects: {},\n  currentProject: {}\n}; // selectors \n\nfunction deleteUserById(users, id) {\n  return users.filter(user => user.id != id);\n}\n\nexport const projectsReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case PUT_GOTTEN_USER_PROJECTS:\n      return { ...state,\n        myProjects: action.payload\n      };\n\n    case PUT_GOTTEN_PROJECT_BY_ID:\n      const sidebarItems = action.payload.data.categories.map(category => {\n        return { ...category,\n          components: this.props.currentProject.data.components.filter(component => category.id == component['category_id'])\n        };\n      });\n      return { ...state,\n        currentProject: { ...action.payload.data,\n          sidebarItems\n        }\n      };\n\n    case PUT_GOTTEN_OTHER_PROJECTS:\n      const filteredProjects = action.payload.data.map(project => {\n        return { ...project,\n          users: deleteUserById(project.users, action.payload.userId)\n        };\n      });\n      console.log(filteredProjects, action.payload);\n      console.log({ ...action.payload,\n        data: filteredProjects\n      });\n      return { ...state,\n        otherProjects: { ...action.payload,\n          data: filteredProjects\n        }\n      };\n\n    case PUT_CREATED_USER_PROJECT:\n      return { ...state,\n        myProjects: { ...state.myProjects,\n          data: [...state.myProjects.data, action.payload]\n        }\n      };\n\n    case PUT_DELETED_USER_PROJECT:\n      return { ...state,\n        myProjects: { ...state.myProjects,\n          data: state.myProjects.data.filter(project => project.id !== action.payload.data.id)\n        }\n      };\n\n    case PUT_ADDED_USER_IN_PROJECT:\n      let dataWithAddedUser = state.myProjects.data.map(project => {\n        if (project.id === action.payload.data['project_user']['project_id']) return { ...project,\n          users: [...(project.users || []), action.payload.data.user]\n        };\n        return project;\n      });\n      return { ...state,\n        myProjects: { ...state.myProjects,\n          data: dataWithAddedUser\n        }\n      };\n\n    case PUT_DELETED_USER_IN_PROJECT:\n      let dataWithOutAddedUser = state.myProjects.data.map(project => {\n        if (project.id == action.payload.data['project_id']) {\n          return { ...project,\n            users: project.users.filter(user => user.id != action.payload.data['user_id'])\n          };\n        }\n\n        return project;\n      });\n      return { ...state,\n        myProjects: { ...state.myProjects,\n          data: dataWithOutAddedUser\n        }\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/projects/reducers.js"],"names":["PUT_GOTTEN_USER_PROJECTS","PUT_GOTTEN_PROJECT_BY_ID","PUT_GOTTEN_OTHER_PROJECTS","PUT_CREATED_USER_PROJECT","PUT_DELETED_USER_PROJECT","PUT_ADDED_USER_IN_PROJECT","PUT_DELETED_USER_IN_PROJECT","store","initialState","myProjects","otherProjects","currentProject","deleteUserById","users","id","filter","user","projectsReduser","state","action","type","payload","sidebarItems","data","categories","map","category","components","props","component","filteredProjects","project","userId","console","log","dataWithAddedUser","dataWithOutAddedUser"],"mappings":"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","sourcesContent":["import { \r\n  PUT_GOTTEN_USER_PROJECTS,\r\n  PUT_GOTTEN_PROJECT_BY_ID,\r\n  PUT_GOTTEN_OTHER_PROJECTS,\r\n  PUT_CREATED_USER_PROJECT,\r\n  PUT_DELETED_USER_PROJECT,\r\n  PUT_ADDED_USER_IN_PROJECT,\r\n  PUT_DELETED_USER_IN_PROJECT,\r\n} from './actions';\r\n\r\nimport store from '../index';\r\n\r\nconst initialState = {\r\n  myProjects: {},\r\n  otherProjects: {},\r\n  currentProject: {}\r\n};\r\n\r\n// selectors \r\nfunction deleteUserById(users, id) {\r\n  return users.filter(user => user.id != id);\r\n}\r\n\r\n\r\nexport const projectsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case PUT_GOTTEN_USER_PROJECTS: \r\n      return ({ \r\n        ...state,\r\n        myProjects: action.payload\r\n      });\r\n\r\n    case PUT_GOTTEN_PROJECT_BY_ID: \r\n      const sidebarItems = action.payload.data.categories.map(category => {\r\n        return {\r\n          ...category, \r\n          components: this.props.currentProject.data.components.filter(\r\n            component => category.id == component['category_id']\r\n          )\r\n        }\r\n      });\r\n\r\n      return ({ \r\n        ...state,\r\n        currentProject: { ...action.payload.data, sidebarItems}\r\n      });\r\n    \r\n    case PUT_GOTTEN_OTHER_PROJECTS: \r\n      const filteredProjects = action.payload.data.map(project => {\r\n        return {\r\n          ...project, \r\n          users: deleteUserById(project.users, action.payload.userId)\r\n        }\r\n      });\r\n\r\n      console.log(filteredProjects, action.payload);\r\n      \r\n      console.log({\r\n        ...action.payload, \r\n        data: filteredProjects\r\n      })\r\n\r\n      return ({ \r\n        ...state,\r\n        otherProjects: {\r\n          ...action.payload, \r\n          data: filteredProjects\r\n        }\r\n      });\r\n\r\n    case PUT_CREATED_USER_PROJECT: \r\n      return ({\r\n        ...state,\r\n        myProjects: {...state.myProjects, data: [...state.myProjects.data, action.payload]}\r\n      });\r\n\r\n    case PUT_DELETED_USER_PROJECT: \r\n      return ({\r\n        ...state,\r\n        myProjects: { \r\n          ...state.myProjects, \r\n          data: state.myProjects.data.filter(project => project.id !== action.payload.data.id)\r\n        }\r\n      });\r\n    \r\n    case PUT_ADDED_USER_IN_PROJECT: \r\n      let dataWithAddedUser = state.myProjects.data.map(project => {\r\n        \r\n        if (project.id === action.payload.data['project_user']['project_id']) \r\n          return {...project, users: [...project.users || [], action.payload.data.user]}\r\n        \r\n        return project;\r\n      });\r\n    \r\n\r\n      return ({ ...state, myProjects: {...state.myProjects, data: dataWithAddedUser}});\r\n     \r\n\r\n    case PUT_DELETED_USER_IN_PROJECT: \r\n      let dataWithOutAddedUser = state.myProjects.data.map(project => {\r\n        \r\n        if (project.id == action.payload.data['project_id']) {\r\n          return {...project, users: project.users.filter(user => user.id != action.payload.data['user_id'])}\r\n        }\r\n        \r\n        return project;\r\n      });\r\n      return ({...state, myProjects: {...state.myProjects, data: dataWithOutAddedUser}});\r\n\r\n    \r\n    default: return state;  \r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}