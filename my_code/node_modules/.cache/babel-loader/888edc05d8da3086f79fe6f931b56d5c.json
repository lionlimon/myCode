{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\limon\\\\Desktop\\\\my projects\\\\myCode\\\\myCode.React\\\\my_code\\\\src\\\\components\\\\Project\\\\Project.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport Sidebar from '../Sidebar/Sidebar';\nimport CreateComponentForm from './CreateComponentForm';\nimport Empty from '../Empty/Empty';\nimport Loader from '../UI/Loader/Loader';\nimport { matchPath } from 'react-router-dom';\nlet snippets = [{\n  type: 'html',\n  value: 'value',\n  id: '1'\n}, {\n  type: 'js',\n  value: 'value',\n  id: '2'\n}];\nconst menuItems = [{\n  link: '#',\n  text: 'Шапки',\n  parentId: 0,\n  id: 1\n}, {\n  link: '#',\n  text: 'Шапка 1',\n  parentId: 1,\n  id: 2\n}, {\n  link: '#',\n  text: 'Шапка 2',\n  parentId: 1,\n  id: 3\n}, {\n  link: '#',\n  text: 'Шапки 3',\n  parentId: 1,\n  id: 4\n}, {\n  link: '#',\n  text: 'Футеры',\n  parentId: 0,\n  id: 5\n}, {\n  link: '#',\n  text: 'Футер',\n  parentId: 5,\n  id: 6\n}];\nconst projects = [{\n  id: 0,\n  name: 'Super project'\n}];\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      snippets,\n      sidebarIsOpen: true\n    };\n    this.openCreateComponentForm = this.openCreateComponentForm.bind(this);\n  }\n\n  componentDidMount() {\n    this.params = matchPath(this.props.match.location.pathname, {\n      path: 'project/:id'\n    });\n    console.log(this.params, 'ПарАмЕтры');\n    if (this.props.components.componentsList.data === undefined) this.props.getComponents();\n  }\n\n  toggleSidebar() {\n    this.setState({\n      sidebarIsOpen: !this.state.sidebarIsOpen\n    });\n  }\n\n  addSnippet(e) {\n    e.preventDefault();\n    if (!this.state.newSnippetType.length > 1) return false;\n    const newSnippet = {\n      type: this.state.newSnippetType,\n      id: this.state.newSnippetType + Number(new Date())\n    };\n    this.setState({\n      snippets: this.state.snippets.concat(newSnippet)\n    });\n  }\n\n  setNewSnippetType(e) {\n    this.setState({\n      newSnippetType: e.target.value\n    });\n  }\n\n  removeSnippet(e) {\n    const id = e.currentTarget.attributes.id.value;\n    const cleanedSnippets = this.state.snippets.filter(snippet => snippet.id != id);\n    console.log(id);\n    if (window.confirm('Really?')) this.setState({\n      snippets: cleanedSnippets\n    });\n  }\n\n  onCreateComponent(data) {\n    console.log(data);\n  }\n\n  openCreateComponentForm() {\n    this.props.openPopup( /*#__PURE__*/React.createElement(CreateComponentForm, {\n      closePopup: this.props.closePopup,\n      addNotify: this.props.addNotify,\n      createComponent: this.createComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  render() {\n    const contentClass = this.state.sidebarIsOpen ? 'content' : 'content hidden-side';\n    console.log(this.props.match.params);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      toggleSidebar: this.toggleSidebar.bind(this),\n      isOpen: this.state.sidebarIsOpen,\n      menuItems: menuItems,\n      openCreateComponentForm: this.openCreateComponentForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: contentClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, this.props.components.componentsList.data === undefined && /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 71\n      }\n    })));\n  }\n\n}\n\nexport default Project;","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/components/Project/Project.jsx"],"names":["React","Component","Fragment","Sidebar","CreateComponentForm","Empty","Loader","matchPath","snippets","type","value","id","menuItems","link","text","parentId","projects","name","Project","constructor","props","state","sidebarIsOpen","openCreateComponentForm","bind","componentDidMount","params","match","location","pathname","path","console","log","components","componentsList","data","undefined","getComponents","toggleSidebar","setState","addSnippet","e","preventDefault","newSnippetType","length","newSnippet","Number","Date","concat","setNewSnippetType","target","removeSnippet","currentTarget","attributes","cleanedSnippets","filter","snippet","window","confirm","onCreateComponent","openPopup","closePopup","addNotify","createComponent","render","contentClass"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport CreateComponentForm from './CreateComponentForm';\r\nimport Empty from '../Empty/Empty';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport {matchPath} from 'react-router-dom';\r\n\r\nlet snippets = [\r\n  {type: 'html', value:'value', id: '1'},\r\n  {type: 'js', value:'value', id: '2'}\r\n];\r\n\r\nconst menuItems = [\r\n  {link: '#', text: 'Шапки', parentId: 0, id: 1},\r\n  {link: '#', text: 'Шапка 1', parentId: 1, id: 2},\r\n  {link: '#', text: 'Шапка 2', parentId: 1, id: 3},\r\n  {link: '#', text: 'Шапки 3', parentId: 1, id: 4},\r\n  {link: '#', text: 'Футеры', parentId: 0, id: 5},\r\n  {link: '#', text: 'Футер', parentId: 5, id: 6},\r\n];\r\n\r\n\r\nconst projects = [\r\n  { id: 0, name: 'Super project' }\r\n];\r\n\r\nclass Project extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      snippets,\r\n      sidebarIsOpen: true\r\n    }\r\n\r\n    this.openCreateComponentForm = this.openCreateComponentForm.bind(this);\r\n    \r\n  }\r\n  \r\n  componentDidMount() {\r\n\r\n    this.params = matchPath(this.props.match.location.pathname, {\r\n      path: 'project/:id'\r\n    });\r\n\r\n    console.log(this.params, 'ПарАмЕтры');\r\n\r\n    if (this.props.components.componentsList.data === undefined)\r\n      this.props.getComponents();\r\n  }\r\n  \r\n  toggleSidebar() {\r\n    this.setState({ sidebarIsOpen: !this.state.sidebarIsOpen });\r\n  }\r\n\r\n  addSnippet(e) {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.newSnippetType.length > 1)\r\n      return false;\r\n    \r\n    const newSnippet = {\r\n      type: this.state.newSnippetType, \r\n      id: this.state.newSnippetType + Number(new Date()),\r\n    }\r\n\r\n    this.setState({\r\n      snippets: this.state.snippets.concat(newSnippet),\r\n    });\r\n\r\n  }\r\n\r\n  setNewSnippetType(e) {\r\n    this.setState({ newSnippetType: e.target.value });\r\n  }\r\n\r\n  removeSnippet(e) {\r\n    const id = e.currentTarget.attributes.id.value;\r\n    const cleanedSnippets = this.state.snippets.filter(snippet => snippet.id != id); \r\n    \r\n    console.log(id);\r\n    if (window.confirm('Really?'))\r\n      this.setState({snippets: cleanedSnippets});\r\n  } \r\n\r\n  onCreateComponent(data) {\r\n    console.log(data);\r\n  }\r\n\r\n  openCreateComponentForm() {\r\n    this.props.openPopup(\r\n      <CreateComponentForm \r\n        closePopup={this.props.closePopup}\r\n        addNotify={this.props.addNotify}\r\n        createComponent={this.createComponent}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const contentClass = this.state.sidebarIsOpen ? 'content' : 'content hidden-side';\r\n    console.log(this.props.match.params)\r\n    return (\r\n      <Fragment>\r\n        <Sidebar \r\n          toggleSidebar={this.toggleSidebar.bind(this)} \r\n          isOpen={this.state.sidebarIsOpen} \r\n          menuItems={menuItems} \r\n          openCreateComponentForm={this.openCreateComponentForm}\r\n          />\r\n        <div className={contentClass}>\r\n          {this.props.components.componentsList.data === undefined && <Loader />}\r\n         \r\n{/*       <Empty>В этом проекте пока нет компонентов</Empty>\r\n          <div className=\"snippets\">\r\n            <div className=\"snippet active\">\r\n              <div className=\"editor\" id=\"html1\">\r\n                <div id=\"editor-area\" className=\"editor__area\"></div>\r\n                <div className=\"editor__panel\">\r\n                  <ul className=\"editor__controls\">\r\n                    <li className=\"editor__control\">\r\n                      <button data-editor=\"html1\" className=\"editor__button\"><i className=\"fas fa-expand\"></i></button>\r\n                    </li>\r\n                    <li className=\"editor__control\">\r\n                      <button className=\"editor__button\"><i className=\"far fa-copy\"></i></button>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"snippet\">\r\n              <div id=\"html\" className=\"editor\">\r\n                <div id=\"editor-area\" className=\"editor__area\"></div>\r\n                <div className=\"editor__panel\">\r\n                  <ul className=\"editor__controls\">\r\n                    <li className=\"editor__control\">\r\n                      <button data-editor=\"html\" className=\"editor__button\"><i className=\"fas fa-expand\"></i></button>\r\n                    </li>\r\n                    <li className=\"editor__control\">\r\n                      <button className=\"editor__button\"><i className=\"far fa-copy\"></i></button>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Project;"]},"metadata":{},"sourceType":"module"}