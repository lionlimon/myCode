{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\limon\\\\Desktop\\\\my projects\\\\myCode\\\\myCode.React\\\\my_code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\limon\\\\Desktop\\\\my projects\\\\myCode\\\\myCode.React\\\\my_code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{PUT_GOTTEN_USER_PROJECTS,PUT_GOTTEN_PROJECT_BY_ID,PUT_GOTTEN_OTHER_PROJECTS,PUT_CREATED_USER_PROJECT,PUT_DELETED_USER_PROJECT,PUT_ADDED_USER_IN_PROJECT,PUT_DELETED_USER_IN_PROJECT,PUT_ADDED_COMPONENT_IN_PROJECT,PUT_DELETED_COMPONENT_IN_PROJECT}from'./actions';import store from'../index';var initialState={myProjects:{},otherProjects:{},currentProject:{}};// selectors \nfunction deleteUserById(users,id){return users.filter(function(user){return user.id!=id;});}export var projectsReduser=function projectsReduser(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case PUT_GOTTEN_USER_PROJECTS:return _objectSpread({},state,{myProjects:action.payload});case PUT_CREATED_USER_PROJECT:return _objectSpread({},state,{myProjects:_objectSpread({},state.myProjects,{data:[].concat(_toConsumableArray(state.myProjects.data),[action.payload])})});case PUT_DELETED_USER_PROJECT:return _objectSpread({},state,{myProjects:_objectSpread({},state.myProjects,{data:state.myProjects.data.filter(function(project){return project.id!==action.payload.data.id;})})});case PUT_ADDED_USER_IN_PROJECT:var dataWithAddedUser=state.myProjects.data.map(function(project){if(project.id===action.payload.data['project_user']['project_id'])return _objectSpread({},project,{users:[].concat(_toConsumableArray(project.users||[]),[action.payload.data.user])});return project;});return _objectSpread({},state,{myProjects:_objectSpread({},state.myProjects,{data:dataWithAddedUser})});case PUT_DELETED_USER_IN_PROJECT:var dataWithOutAddedUser=state.myProjects.data.map(function(project){if(project.id==action.payload.data['project_id']){return _objectSpread({},project,{users:project.users.filter(function(user){return user.id!=action.payload.data['user_id'];})});}return project;});return _objectSpread({},state,{myProjects:_objectSpread({},state.myProjects,{data:dataWithOutAddedUser})});case PUT_ADDED_COMPONENT_IN_PROJECT:var updatedCategories;if(state.currentProject.categories.filter(function(category){return category.id==action.payload.data.category.id;}).length>0){updatedCategories=state.currentProject.categories;}else{updatedCategories=[].concat(_toConsumableArray(state.currentProject.categories),[action.payload.data.category]);}var updatedProjectStructure=updatedCategories.map(function(category){return _objectSpread({},category,{components:[].concat(_toConsumableArray(state.currentProject.components),[action.payload.data.component]).filter(function(component){return category.id==component['category_id'];})});});return _objectSpread({},state,{currentProject:_objectSpread({},state.currentProject,{components:[].concat(_toConsumableArray(state.currentProject.components),[action.payload.data.component]),categories:updatedCategories,projectStructure:updatedProjectStructure})});case PUT_DELETED_COMPONENT_IN_PROJECT:return _objectSpread({},state,{currentProject:_objectSpread({},state.currentProject,{components:state.currentProject.components.filter(function(component){return component.id!=action.payload.data.id;}),projectStructure:state.currentProject.categories.map(function(category){return _objectSpread({},category,{components:state.currentProject.components.filter(function(component){return category.id==component['category_id']&&component.id!=action.payload.data.id;})});})})});case PUT_GOTTEN_PROJECT_BY_ID:var projectStructure=action.payload.data.categories.map(function(category){return _objectSpread({},category,{components:action.payload.data.components.filter(function(component){return category.id==component['category_id'];})});});return _objectSpread({},state,{currentProject:_objectSpread({},action.payload.data,{projectStructure:projectStructure})});case PUT_GOTTEN_OTHER_PROJECTS:var filteredProjects=action.payload.data.map(function(project){return _objectSpread({},project,{users:deleteUserById(project.users,action.payload.userId)});});console.log(filteredProjects,action.payload);console.log(_objectSpread({},action.payload,{data:filteredProjects}));return _objectSpread({},state,{otherProjects:_objectSpread({},action.payload,{data:filteredProjects})});default:return state;}};","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/projects/reducers.js"],"names":["PUT_GOTTEN_USER_PROJECTS","PUT_GOTTEN_PROJECT_BY_ID","PUT_GOTTEN_OTHER_PROJECTS","PUT_CREATED_USER_PROJECT","PUT_DELETED_USER_PROJECT","PUT_ADDED_USER_IN_PROJECT","PUT_DELETED_USER_IN_PROJECT","PUT_ADDED_COMPONENT_IN_PROJECT","PUT_DELETED_COMPONENT_IN_PROJECT","store","initialState","myProjects","otherProjects","currentProject","deleteUserById","users","id","filter","user","projectsReduser","state","action","type","payload","data","project","dataWithAddedUser","map","dataWithOutAddedUser","updatedCategories","categories","category","length","updatedProjectStructure","components","component","projectStructure","filteredProjects","userId","console","log"],"mappings":"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","sourcesContent":["import { \r\n  PUT_GOTTEN_USER_PROJECTS,\r\n  PUT_GOTTEN_PROJECT_BY_ID,\r\n  PUT_GOTTEN_OTHER_PROJECTS,\r\n  PUT_CREATED_USER_PROJECT,\r\n  PUT_DELETED_USER_PROJECT,\r\n  PUT_ADDED_USER_IN_PROJECT,\r\n  PUT_DELETED_USER_IN_PROJECT,\r\n  PUT_ADDED_COMPONENT_IN_PROJECT,\r\n  PUT_DELETED_COMPONENT_IN_PROJECT\r\n} from './actions';\r\n\r\nimport store from '../index';\r\n\r\nconst initialState = {\r\n  myProjects: {},\r\n  otherProjects: {},\r\n  currentProject: {}\r\n};\r\n\r\n// selectors \r\nfunction deleteUserById(users, id) {\r\n  return users.filter(user => user.id != id);\r\n}\r\n\r\n\r\nexport const projectsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case PUT_GOTTEN_USER_PROJECTS: \r\n      return ({ \r\n        ...state,\r\n        myProjects: action.payload\r\n      });\r\n\r\n    case PUT_CREATED_USER_PROJECT: \r\n      return ({\r\n        ...state,\r\n        myProjects: {...state.myProjects, data: [...state.myProjects.data, action.payload]}\r\n      });\r\n\r\n    case PUT_DELETED_USER_PROJECT: \r\n      return ({\r\n        ...state,\r\n        myProjects: { \r\n          ...state.myProjects, \r\n          data: state.myProjects.data.filter(project => project.id !== action.payload.data.id)\r\n        }\r\n      });\r\n\r\n      case PUT_ADDED_USER_IN_PROJECT: \r\n      let dataWithAddedUser = state.myProjects.data.map(project => {\r\n        \r\n        if (project.id === action.payload.data['project_user']['project_id']) \r\n          return {...project, users: [...project.users || [], action.payload.data.user]}\r\n        \r\n        return project;\r\n      });\r\n    \r\n\r\n      return ({ ...state, myProjects: {...state.myProjects, data: dataWithAddedUser}});\r\n     \r\n\r\n    case PUT_DELETED_USER_IN_PROJECT: \r\n      let dataWithOutAddedUser = state.myProjects.data.map(project => {\r\n        \r\n        if (project.id == action.payload.data['project_id']) {\r\n          return {...project, users: project.users.filter(user => user.id != action.payload.data['user_id'])}\r\n        }\r\n        \r\n        return project;\r\n      });\r\n      return ({...state, myProjects: {...state.myProjects, data: dataWithOutAddedUser}});\r\n      \r\n\r\n    case PUT_ADDED_COMPONENT_IN_PROJECT: \r\n      let updatedCategories;\r\n      \r\n      if (state.currentProject.categories.filter(category => category.id == action.payload.data.category.id).length > 0) {\r\n        updatedCategories = state.currentProject.categories;\r\n      } else {\r\n        updatedCategories = [\r\n          ...state.currentProject.categories, \r\n          action.payload.data.category\r\n        ];\r\n      }\r\n      let updatedProjectStructure = updatedCategories.map(category => {\r\n        \r\n        return {\r\n          ...category, \r\n          components: [\r\n            ...state.currentProject.components,\r\n            action.payload.data.component\r\n          ].filter(\r\n            component => category.id == component['category_id']\r\n          )\r\n        }\r\n      });\r\n      \r\n     \r\n\r\n      return ({ \r\n        ...state,\r\n        currentProject: { \r\n          ...state.currentProject,\r\n          components: [\r\n            ...state.currentProject.components, \r\n            action.payload.data.component\r\n          ],\r\n          categories: updatedCategories,\r\n          projectStructure: updatedProjectStructure\r\n        }\r\n      });\r\n\r\n    case PUT_DELETED_COMPONENT_IN_PROJECT: \r\n    \r\n      return ({ \r\n        ...state,\r\n        currentProject: { \r\n          ...state.currentProject,\r\n          components: state.currentProject.components.filter(\r\n            component => component.id != action.payload.data.id\r\n          ), \r\n  \r\n          projectStructure: state.currentProject.categories.map(category => {\r\n            return {\r\n              ...category, \r\n              components: state.currentProject.components.filter(\r\n                component => category.id == component['category_id'] && \r\n                  component.id != action.payload.data.id\r\n              )\r\n            }\r\n          })\r\n        }\r\n      });\r\n     \r\n\r\n    case PUT_GOTTEN_PROJECT_BY_ID: \r\n      const projectStructure = action.payload.data.categories.map(category => {\r\n        return {\r\n          ...category, \r\n          components: action.payload.data.components.filter(\r\n            component => category.id == component['category_id']\r\n          )\r\n        }\r\n      });\r\n\r\n      return ({ \r\n        ...state,\r\n        currentProject: { ...action.payload.data, projectStructure}\r\n      });\r\n    \r\n    case PUT_GOTTEN_OTHER_PROJECTS: \r\n      const filteredProjects = action.payload.data.map(project => {\r\n        return {\r\n          ...project, \r\n          users: deleteUserById(project.users, action.payload.userId)\r\n        }\r\n      });\r\n\r\n      console.log(filteredProjects, action.payload);\r\n      \r\n      console.log({\r\n        ...action.payload, \r\n        data: filteredProjects\r\n      })\r\n\r\n      return ({ \r\n        ...state,\r\n        otherProjects: {\r\n          ...action.payload, \r\n          data: filteredProjects\r\n        }\r\n      });\r\n\r\n    default: return state;  \r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}