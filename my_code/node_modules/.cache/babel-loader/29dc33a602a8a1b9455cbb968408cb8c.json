{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { GET_COMPONENTS, CREATE_COMPONENT, putGottenComponents } from './actions';\nimport fetchWithAuth from '../fetchWithAuth';\nimport * as config from '../config';\nimport { addNotify } from '../notify/actions';\nimport store from '../index'; // Workers\n\nfunction* workerGetComponents(action) {\n  const response = yield fetchWithAuth(config.URL_COMPONENT_API);\n  console.log(response);\n  if (response && response.success === true) yield put(putGottenComponents(response));else yield put(addNotify({\n    message: response.message\n  }));\n}\n\nfunction* workerCreateComponent(action) {\n  const response = yield fetchWithAuth(config.URL_COMPONENT_API + '/', 'POST', action.payload);\n  console.log(response, 'aaaaaa, responsae'); // if (response && response.success === true) \t\n  //   yield put(putGottenComponents(response));\n  // else \n  //   yield put(addNotify({message: response.message}));\n} // Watchers \n\n\nexport function* watchGetComponents() {\n  yield takeEvery(GET_COMPONENTS, workerGetComponents);\n}\nexport function* wathcCreateComponent() {\n  yield takeEvery(CREATE_COMPONENT, workerCreateComponent);\n}","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/components/sagas.js"],"names":["takeEvery","put","call","GET_COMPONENTS","CREATE_COMPONENT","putGottenComponents","fetchWithAuth","config","addNotify","store","workerGetComponents","action","response","URL_COMPONENT_API","console","log","success","message","workerCreateComponent","payload","watchGetComponents","wathcCreateComponent"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,SACEC,cADF,EAEEC,gBAFF,EAGEC,mBAHF,QAIO,WAJP;AAMA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,UAAlB,C,CAEA;;AAEA,UAAUC,mBAAV,CAA8BC,MAA9B,EAAsC;AAErC,QAAMC,QAAQ,GAAG,MAAMN,aAAa,CAACC,MAAM,CAACM,iBAAR,CAApC;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,MAAIA,QAAQ,IAAIA,QAAQ,CAACI,OAAT,KAAqB,IAArC,EACG,MAAMf,GAAG,CAACI,mBAAmB,CAACO,QAAD,CAApB,CAAT,CADH,KAGG,MAAMX,GAAG,CAACO,SAAS,CAAC;AAACS,IAAAA,OAAO,EAAEL,QAAQ,CAACK;AAAnB,GAAD,CAAV,CAAT;AACH;;AAED,UAAUC,qBAAV,CAAgCP,MAAhC,EAAwC;AAEvC,QAAMC,QAAQ,GAAG,MAAMN,aAAa,CAACC,MAAM,CAACM,iBAAP,GAA2B,GAA5B,EAAiC,MAAjC,EAAyCF,MAAM,CAACQ,OAAhD,CAApC;AACCL,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsB,mBAAtB,EAHsC,CAKvC;AACC;AACA;AACA;AACD,C,CAED;;;AAEA,OAAO,UAAUQ,kBAAV,GAA+B;AACpC,QAAMpB,SAAS,CAACG,cAAD,EAAiBO,mBAAjB,CAAf;AACD;AAED,OAAO,UAAUW,oBAAV,GAAiC;AACtC,QAAMrB,SAAS,CAACI,gBAAD,EAAmBc,qBAAnB,CAAf;AACD","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects';\r\nimport {\r\n  GET_COMPONENTS,\r\n  CREATE_COMPONENT, \r\n  putGottenComponents,\r\n} from './actions';\r\n\r\nimport fetchWithAuth from '../fetchWithAuth';\r\nimport * as config from '../config';\r\nimport { addNotify } from '../notify/actions';\r\nimport store from '../index';\r\n\r\n// Workers\r\n\r\nfunction* workerGetComponents(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(config.URL_COMPONENT_API);\r\n  console.log(response);\r\n\tif (response && response.success === true) \t\r\n    yield put(putGottenComponents(response));\r\n  else \r\n    yield put(addNotify({message: response.message}));\r\n}\r\n\r\nfunction* workerCreateComponent(action) {\r\n  \r\n\tconst response = yield fetchWithAuth(config.URL_COMPONENT_API + '/', 'POST', action.payload);\r\n  console.log(response, 'aaaaaa, responsae');\r\n\r\n\t// if (response && response.success === true) \t\r\n  //   yield put(putGottenComponents(response));\r\n  // else \r\n  //   yield put(addNotify({message: response.message}));\r\n}\r\n\r\n// Watchers \r\n\r\nexport function* watchGetComponents() {\r\n  yield takeEvery(GET_COMPONENTS, workerGetComponents);\r\n}\r\n\r\nexport function* wathcCreateComponent() {\r\n  yield takeEvery(CREATE_COMPONENT, workerCreateComponent);\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}