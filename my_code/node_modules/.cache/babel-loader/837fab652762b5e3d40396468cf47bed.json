{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { watchRegisterData, watchLoginData, watchGetUserData } from './auth/sagas';\nimport { watchGetProjects, watchGetOtherProjects, watchCreateProjects, watchDeleteProjects, watchAddUserInProject, watchDeleteUserInProject, watchGetProjectById } from './projects/sagas';\nimport { watchGetComponents, wathcCreateComponent } from './components/sagas';\nimport reducers from './redusers';\nimport logger from 'redux-logger';\nimport { watchGetSnippets, watchCreateSnippet } from './snippets/sagas';\n\nconst loadState = () => {\n  try {\n    const serialisedState = window.localStorage.getItem('app_state');\n    if (!serialisedState) return {}; // todo: допилить\n\n    return JSON.parse(serialisedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst saveState = state => {\n  try {\n    const serialisedState = JSON.stringify(state);\n    window.localStorage.setItem('app_state', serialisedState);\n  } catch (err) {}\n};\n\nconst sagaMiddleware = createSagaMiddleware();\nconst oldState = loadState();\nconst store = createStore(reducers, oldState, applyMiddleware(sagaMiddleware, logger));\nsagaMiddleware.run(watchRegisterData);\nsagaMiddleware.run(watchLoginData);\nsagaMiddleware.run(watchGetProjects);\nsagaMiddleware.run(watchCreateProjects);\nsagaMiddleware.run(watchDeleteProjects);\nsagaMiddleware.run(watchAddUserInProject);\nsagaMiddleware.run(watchDeleteUserInProject);\nsagaMiddleware.run(watchGetOtherProjects);\nsagaMiddleware.run(watchGetUserData);\nsagaMiddleware.run(watchGetComponents);\nsagaMiddleware.run(wathcCreateComponent);\nsagaMiddleware.run(watchGetProjectById);\nsagaMiddleware.run(watchGetSnippets);\nsagaMiddleware.run(watchCreateSnippet);\nstore.subscribe(() => {\n  saveState({\n    auth: store.getState().auth // projects: store.getState().projects\n\n  });\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/index.js"],"names":["createStore","applyMiddleware","createSagaMiddleware","watchRegisterData","watchLoginData","watchGetUserData","watchGetProjects","watchGetOtherProjects","watchCreateProjects","watchDeleteProjects","watchAddUserInProject","watchDeleteUserInProject","watchGetProjectById","watchGetComponents","wathcCreateComponent","reducers","logger","watchGetSnippets","watchCreateSnippet","loadState","serialisedState","window","localStorage","getItem","JSON","parse","err","undefined","saveState","state","stringify","setItem","sagaMiddleware","oldState","store","run","subscribe","auth","getState"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,iBAAR,EAA2BC,cAA3B,EAA2CC,gBAA3C,QAAkE,cAAlE;AACA,SACEC,gBADF,EAEEC,qBAFF,EAGEC,mBAHF,EAIEC,mBAJF,EAKEC,qBALF,EAMEC,wBANF,EAOEC,mBAPF,QAQO,kBARP;AASA,SAAQC,kBAAR,EAA4BC,oBAA5B,QAAuD,oBAAvD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,kBAArD;;AAIA,MAAMC,SAAS,GAAG,MAAM;AACtB,MAAI;AACA,UAAMC,eAAe,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAAxB;AAEA,QAAI,CAACH,eAAL,EAAsB,OAAO,EAAP,CAHtB,CAGiC;;AAEjC,WAAOI,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAP;AACH,GAND,CAME,OAAOM,GAAP,EAAY;AACV,WAAOC,SAAP;AACH;AACF,CAVD;;AAYA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,MAAI;AACA,UAAMT,eAAe,GAAGI,IAAI,CAACM,SAAL,CAAeD,KAAf,CAAxB;AAEAR,IAAAA,MAAM,CAACC,YAAP,CAAoBS,OAApB,CAA4B,WAA5B,EAAyCX,eAAzC;AACH,GAJD,CAIE,OAAOM,GAAP,EAAY,CAEb;AACF,CARD;;AAUA,MAAMM,cAAc,GAAG9B,oBAAoB,EAA3C;AACA,MAAM+B,QAAQ,GAAGd,SAAS,EAA1B;AACA,MAAMe,KAAK,GAAGlC,WAAW,CAACe,QAAD,EAAWkB,QAAX,EAAqBhC,eAAe,CAAC+B,cAAD,EAAiBhB,MAAjB,CAApC,CAAzB;AAEAgB,cAAc,CAACG,GAAf,CAAmBhC,iBAAnB;AACA6B,cAAc,CAACG,GAAf,CAAmB/B,cAAnB;AACA4B,cAAc,CAACG,GAAf,CAAmB7B,gBAAnB;AACA0B,cAAc,CAACG,GAAf,CAAmB3B,mBAAnB;AACAwB,cAAc,CAACG,GAAf,CAAmB1B,mBAAnB;AACAuB,cAAc,CAACG,GAAf,CAAmBzB,qBAAnB;AACAsB,cAAc,CAACG,GAAf,CAAmBxB,wBAAnB;AACAqB,cAAc,CAACG,GAAf,CAAmB5B,qBAAnB;AACAyB,cAAc,CAACG,GAAf,CAAmB9B,gBAAnB;AACA2B,cAAc,CAACG,GAAf,CAAmBtB,kBAAnB;AACAmB,cAAc,CAACG,GAAf,CAAmBrB,oBAAnB;AACAkB,cAAc,CAACG,GAAf,CAAmBvB,mBAAnB;AACAoB,cAAc,CAACG,GAAf,CAAmBlB,gBAAnB;AACAe,cAAc,CAACG,GAAf,CAAmBjB,kBAAnB;AAEAgB,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpBR,EAAAA,SAAS,CAAC;AACRS,IAAAA,IAAI,EAAEH,KAAK,CAACI,QAAN,GAAiBD,IADf,CAER;;AAFQ,GAAD,CAAT;AAID,CALD;AAQA,eAAeH,KAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {watchRegisterData, watchLoginData, watchGetUserData} from './auth/sagas';\r\nimport {\r\n  watchGetProjects, \r\n  watchGetOtherProjects,\r\n  watchCreateProjects, \r\n  watchDeleteProjects, \r\n  watchAddUserInProject, \r\n  watchDeleteUserInProject,\r\n  watchGetProjectById,\r\n} from './projects/sagas';\r\nimport {watchGetComponents, wathcCreateComponent} from './components/sagas';\r\nimport reducers from './redusers';\r\nimport logger from 'redux-logger'\r\nimport { watchGetSnippets, watchCreateSnippet } from './snippets/sagas';\r\n\r\n\r\n\r\nconst loadState = () => {\r\n  try {\r\n      const serialisedState = window.localStorage.getItem('app_state');\r\n\r\n      if (!serialisedState) return {}; // todo: допилить\r\n\r\n      return JSON.parse(serialisedState);\r\n  } catch (err) {\r\n      return undefined;\r\n  }\r\n};\r\n\r\nconst saveState = (state) => {\r\n  try {\r\n      const serialisedState = JSON.stringify(state);\r\n\r\n      window.localStorage.setItem('app_state', serialisedState);\r\n  } catch (err) {\r\n    \r\n  }\r\n};\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst oldState = loadState();\r\nconst store = createStore(reducers, oldState, applyMiddleware(sagaMiddleware, logger));\r\n\r\nsagaMiddleware.run(watchRegisterData);\r\nsagaMiddleware.run(watchLoginData);\r\nsagaMiddleware.run(watchGetProjects);\r\nsagaMiddleware.run(watchCreateProjects);\r\nsagaMiddleware.run(watchDeleteProjects);\r\nsagaMiddleware.run(watchAddUserInProject);\r\nsagaMiddleware.run(watchDeleteUserInProject);\r\nsagaMiddleware.run(watchGetOtherProjects);\r\nsagaMiddleware.run(watchGetUserData);\r\nsagaMiddleware.run(watchGetComponents);\r\nsagaMiddleware.run(wathcCreateComponent);\r\nsagaMiddleware.run(watchGetProjectById);\r\nsagaMiddleware.run(watchGetSnippets);\r\nsagaMiddleware.run(watchCreateSnippet);\r\n  \r\nstore.subscribe(() => {\r\n  saveState({\r\n    auth: store.getState().auth,\r\n    // projects: store.getState().projects\r\n  });\r\n});\r\n\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}