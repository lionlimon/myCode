{"ast":null,"code":"import { ADD_NOTIFY, HIDE_NOTIFY } from './actions';\nconst initialState = {\n  notifyList: []\n};\nexport const notifyReducer = (state = initialState, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case ADD_NOTIFY:\n      return { ...state,\n        notifyList: state.notifyList.concat(action.payload)\n      };\n\n    case HIDE_NOTIFY:\n      return { ...state,\n        notifyList: state.notifyList.map(item => {\n          if (action.payload === undefined) console.log('false');\n          if (item.id === action.payload) return { ...item,\n            isVisible: false\n          };else return item;\n        })\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/notify/reducers.js"],"names":["ADD_NOTIFY","HIDE_NOTIFY","initialState","notifyList","notifyReducer","state","action","console","log","type","concat","payload","map","item","undefined","id","isVisible"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,WAAxC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AADO,CAArB;AAIA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC7DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKT,UAAL;AAAiB,aAAQ,EACvB,GAAGK,KADoB;AAEvBF,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,CAAiBO,MAAjB,CAAwBJ,MAAM,CAACK,OAA/B;AAFW,OAAR;;AAKjB,SAAKV,WAAL;AAAkB,aAAO,EACvB,GAAGI,KADoB;AAEvBF,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,CAAiBS,GAAjB,CAAsBC,IAAD,IAAU;AACzC,cAAIP,MAAM,CAACK,OAAP,KAAmBG,SAAvB,EACEP,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEF,cAAIK,IAAI,CAACE,EAAL,KAAYT,MAAM,CAACK,OAAvB,EACE,OAAO,EAAE,GAAGE,IAAL;AAAWG,YAAAA,SAAS,EAAE;AAAtB,WAAP,CADF,KAGE,OAAOH,IAAP;AACH,SARW;AAFW,OAAP;;AAalB;AAAS,aAAOR,KAAP;AAnBX;AAqBD,CAvBM","sourcesContent":["import { ADD_NOTIFY, HIDE_NOTIFY } from './actions';\r\n\r\nconst initialState = {\r\n  notifyList: []\r\n};\r\n\r\nexport const notifyReducer = (state = initialState, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case ADD_NOTIFY: return ({\r\n      ...state, \r\n      notifyList: state.notifyList.concat(action.payload)\r\n    });\r\n\r\n    case HIDE_NOTIFY: return({\r\n      ...state, \r\n      notifyList: state.notifyList.map((item) => {\r\n        if (action.payload === undefined) \r\n          console.log('false');\r\n      \r\n        if (item.id === action.payload) \r\n          return { ...item, isVisible: false };\r\n        else \r\n          return item;\r\n      })\r\n    });\r\n\r\n    default: return state;  \r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}