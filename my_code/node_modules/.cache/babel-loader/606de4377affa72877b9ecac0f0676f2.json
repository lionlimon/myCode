{"ast":null,"code":"import { PUT_GOTTEN_USER_PROJECTS, PUT_CREATED_USER_PROJECT, PUT_DELETED_USER_PROJECT, PUT_ADDED_USER_IN_PROJECT } from './actions';\nconst initialState = {\n  myProjects: {}\n};\nexport const projectsReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case PUT_GOTTEN_USER_PROJECTS:\n      return { ...state,\n        myProjects: action.payload\n      };\n\n    case PUT_CREATED_USER_PROJECT:\n      return { ...state,\n        myProjects: [state.myProjects, action.payload]\n      };\n\n    case PUT_DELETED_USER_PROJECT:\n      return { ...state,\n        myProjects: [state.myProjects, action.payload]\n      };\n\n    case PUT_ADDED_USER_IN_PROJECT:\n      const newData = state.myProjects.data.map(project => {\n        return project.users.filter(user => user.id === action.payload.data['user_id'] && project.id === action.payload.data['project_id']);\n      });\n      const newState = { ...state\n      };\n      return {\n        newState\n      };\n      break;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/store/projects/reducers.js"],"names":["PUT_GOTTEN_USER_PROJECTS","PUT_CREATED_USER_PROJECT","PUT_DELETED_USER_PROJECT","PUT_ADDED_USER_IN_PROJECT","initialState","myProjects","projectsReduser","state","action","type","payload","newData","data","map","project","users","filter","user","id","newState"],"mappings":"AAAA,SACEA,wBADF,EAEEC,wBAFF,EAGEC,wBAHF,EAIEC,yBAJF,QAKO,WALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AADO,CAArB;AAIA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC/D,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKT,wBAAL;AAA+B,aAAQ,EACrC,GAAGO,KADkC;AAErCF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAFkB,OAAR;;AAK/B,SAAKT,wBAAL;AAA+B,aAAQ,EACrC,GAAGM,KADkC;AAErCF,QAAAA,UAAU,EAAE,CAACE,KAAK,CAACF,UAAP,EAAmBG,MAAM,CAACE,OAA1B;AAFyB,OAAR;;AAK/B,SAAKR,wBAAL;AAA+B,aAAQ,EACrC,GAAGK,KADkC;AAErCF,QAAAA,UAAU,EAAE,CAACE,KAAK,CAACF,UAAP,EAAmBG,MAAM,CAACE,OAA1B;AAFyB,OAAR;;AAK/B,SAAKP,yBAAL;AACE,YAAMQ,OAAO,GAAGJ,KAAK,CAACF,UAAN,CAAiBO,IAAjB,CAAsBC,GAAtB,CAA0BC,OAAO,IAAI;AACnD,eAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYV,MAAM,CAACE,OAAP,CAAeE,IAAf,CAAoB,SAApB,CAAZ,IACAE,OAAO,CAACI,EAAR,KAAeV,MAAM,CAACE,OAAP,CAAeE,IAAf,CAAoB,YAApB,CAD5C,CAAP;AAED,OAHe,CAAhB;AAKA,YAAMO,QAAQ,GAAG,EAAC,GAAGZ;AAAJ,OAAjB;AACA,aAAQ;AACNY,QAAAA;AADM,OAAR;AAGA;;AAEF;AAAS,aAAOZ,KAAP;AA7BX;AA+BD,CAhCM","sourcesContent":["import { \r\n  PUT_GOTTEN_USER_PROJECTS,\r\n  PUT_CREATED_USER_PROJECT,\r\n  PUT_DELETED_USER_PROJECT,\r\n  PUT_ADDED_USER_IN_PROJECT\r\n} from './actions';\r\n\r\nconst initialState = {\r\n  myProjects: {},\r\n};\r\n\r\nexport const projectsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case PUT_GOTTEN_USER_PROJECTS: return ({\r\n      ...state, \r\n      myProjects: action.payload\r\n    });\r\n\r\n    case PUT_CREATED_USER_PROJECT: return ({\r\n      ...state, \r\n      myProjects: [state.myProjects, action.payload]\r\n    });\r\n\r\n    case PUT_DELETED_USER_PROJECT: return ({\r\n      ...state, \r\n      myProjects: [state.myProjects, action.payload]\r\n    });\r\n    \r\n    case PUT_ADDED_USER_IN_PROJECT: \r\n      const newData = state.myProjects.data.map(project => {\r\n        return project.users.filter(user => user.id === action.payload.data['user_id'] &&\r\n                                            project.id === action.payload.data['project_id']);\r\n      });\r\n\r\n      const newState = {...state};\r\n      return ({\r\n        newState\r\n      });\r\n      break;\r\n\r\n    default: return state;  \r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}