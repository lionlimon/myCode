{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\limon\\\\Desktop\\\\my projects\\\\myCode\\\\myCode.React\\\\my_code\\\\src\\\\components\\\\Project\\\\Snippets.jsx\";\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport Loader from '../UI/Loader/Loader';\nimport TopList from '../TopList/TopList';\n\nconst Snippets = props => {\n  let {\n    componentId,\n    projectId\n  } = useParams();\n  useEffect(() => {\n    if (props.snippets.snippetsList.data === undefined) props.getSnippets(componentId);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, props.snippets.snippetsList.data && /*#__PURE__*/React.createElement(TopList, {\n    linkGen: `{project${projectId}/component{id}}`,\n    items: props.snippets.snippetsList.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 44\n    }\n  }), !props.snippets.snippetsList.data && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 45\n    }\n  }));\n};\n\nexport default Snippets;","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/components/Project/Snippets.jsx"],"names":["React","useParams","useEffect","Loader","TopList","Snippets","props","componentId","projectId","snippets","snippetsList","data","undefined","getSnippets"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE1B,MAAI;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA6BP,SAAS,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAK,CAACG,QAAN,CAAeC,YAAf,CAA4BC,IAA5B,KAAqCC,SAAzC,EACEN,KAAK,CAACO,WAAN,CAAkBN,WAAlB;AACH,GAHQ,CAAT;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACG,QAAN,CAAeC,YAAf,CAA4BC,IAA5B,iBAAoC,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAG,WAAUH,SAAU,iBAAvC;AAAyD,IAAA,KAAK,EAAEF,KAAK,CAACG,QAAN,CAAeC,YAAf,CAA4BC,IAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvC,EAEG,CAACL,KAAK,CAACG,QAAN,CAAeC,YAAf,CAA4BC,IAA7B,iBAAqC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFxC,CADF;AAMD,CAfD;;AAiBA,eAAeN,QAAf","sourcesContent":["import React from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useEffect} from 'react';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport TopList from '../TopList/TopList';\r\n\r\nconst Snippets = (props) => {\r\n\r\n  let { componentId, projectId } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (props.snippets.snippetsList.data === undefined ) \r\n      props.getSnippets(componentId);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {props.snippets.snippetsList.data && <TopList linkGen={`{project${projectId}/component{id}}`} items={props.snippets.snippetsList.data} />}\r\n      {!props.snippets.snippetsList.data && <Loader />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snippets;"]},"metadata":{},"sourceType":"module"}