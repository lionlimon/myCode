{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\limon\\\\Desktop\\\\my projects\\\\myCode\\\\myCode.React\\\\my_code\\\\src\\\\components\\\\Projects\\\\Projects.jsx\";\nimport React, { useEffect, Fragment } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Card, CardTitle, CardSubTitle, CardButtons, Members, Cards, CardСlose } from '../UI/Card/Card';\nimport Loader from '../UI/Loader/Loader';\nimport SimpleButton from '../UI/SimpleButton/SimpleButton';\n\nconst Projects = props => {\n  return /*#__PURE__*/React.createElement(Cards, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, props.projectsList.data.map(project => {\n    const members = [{\n      name: 'вы',\n      id: 1\n    }];\n    if (project.users !== undefined) members.push(...users);\n    return /*#__PURE__*/React.createElement(Card, {\n      key: project.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardСlose, {\n      onClick: () => {\n        props.deleteUserProject(project.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, project.name), /*#__PURE__*/React.createElement(CardSubTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438:\"), /*#__PURE__*/React.createElement(Members, {\n      members: members,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CardButtons, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SimpleButton, {\n      mixinClass: \"card__button\",\n      theme: \"purple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C\"), /*#__PURE__*/React.createElement(SimpleButton, {\n      mixinClass: \"card__button\",\n      theme: \"mint\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0430\")));\n  }));\n};\n\nexport const MyProjects = props => {\n  console.log(props.getUserProjects);\n  useEffect(() => {\n    if (props.myProjects.success === undefined) props.getUserProjects();\n  });\n\n  if (props.myProjects !== undefined && props.myProjects.data !== undefined && props.myProjects.data.length != 0) {\n    return /*#__PURE__*/React.createElement(Projects, {\n      projectsList: props.myProjects,\n      deleteUserProject: props.deleteUserProject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    });\n  } else if (props.myProjects.success !== undefined) {\n    return 'Проектов пока нет :(, добавте новый';\n  } else {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 12\n      }\n    });\n  }\n};\nexport default Projects;","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/components/Projects/Projects.jsx"],"names":["React","useEffect","Fragment","Switch","Route","Card","CardTitle","CardSubTitle","CardButtons","Members","Cards","CardСlose","Loader","SimpleButton","Projects","props","projectsList","data","map","project","members","name","id","users","undefined","push","deleteUserProject","MyProjects","console","log","getUserProjects","myProjects","success","length"],"mappings":"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","sourcesContent":["import React, {useEffect, Fragment} from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport {\r\n  Card,\r\n  CardTitle,\r\n  CardSubTitle,\r\n  CardButtons,\r\n  Members,\r\n  Cards, \r\n  CardСlose\r\n} from '../UI/Card/Card';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport SimpleButton from '../UI/SimpleButton/SimpleButton';\r\n\r\n\r\n\r\nconst Projects = (props) => {\r\n\r\n\r\n  return (\r\n    \r\n    <Cards>\r\n      {props.projectsList.data.map((project) => {\r\n        const members = [\r\n          {name: 'вы', id: 1}\r\n        ];\r\n      \r\n        if (project.users !== undefined)\r\n          members.push(...users);\r\n\r\n        return(\r\n          <Card key={project.id}>\r\n            <CardСlose onClick={() => {props.deleteUserProject(project.id)}}/>\r\n            <CardTitle>{project.name}</CardTitle>\r\n            <CardSubTitle>Участники:</CardSubTitle>\r\n            \r\n            <Members members={members} />\r\n\r\n            <CardButtons>\r\n              <SimpleButton mixinClass=\"card__button\" theme=\"purple\">Открыть</SimpleButton>\r\n              <SimpleButton mixinClass=\"card__button\" theme=\"mint\">Добавить участника</SimpleButton>\r\n            </CardButtons>\r\n          </Card>\r\n        );\r\n      })}\r\n    </Cards>\r\n  );\r\n}\r\n\r\nexport const MyProjects = (props) => {\r\n  console.log(props.getUserProjects)\r\n  useEffect(() => {\r\n    if (props.myProjects.success === undefined)\r\n      props.getUserProjects();    \r\n  })\r\n\r\n  if (props.myProjects !== undefined && props.myProjects.data !== undefined && props.myProjects.data.length != 0) {\r\n    return (\r\n      <Projects \r\n        projectsList={props.myProjects}\r\n        deleteUserProject={props.deleteUserProject}\r\n      />\r\n    );\r\n  } else if (props.myProjects.success !== undefined) {\r\n    return 'Проектов пока нет :(, добавте новый';\r\n  } else {\r\n    return <Loader />;\r\n  } \r\n}\r\n\r\nexport default Projects;"]},"metadata":{},"sourceType":"module"}