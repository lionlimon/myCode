{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\limon\\\\Desktop\\\\my projects\\\\myCode\\\\myCode.React\\\\my_code\\\\src\\\\components\\\\Editor\\\\Editor.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport AceEditor from \"react-ace\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCopy, faExpand, faTrash, faSave } from '@fortawesome/free-solid-svg-icons';\nimport \"ace-builds/src-noconflict/theme-tomorrow_night\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport './Editor.sass';\nimport Loader from '../UI/Loader/Loader';\nimport store from '../../store/index';\n\nconst Editor = props => {\n  var _props$snippets, _props$snippets$snipp;\n\n  let {\n    snippetId\n  } = useParams();\n\n  function bindSaveKeys(snippetId) {\n    let timer;\n    document.addEventListener('keydown', e => {\n      if (e.ctrlKey && e.keyCode == 83) {\n        e.preventDefault();\n        clearTimeout(timer);\n        timer = setTimeout(onSaveSnippet.bind(this), 300);\n      }\n    });\n  }\n\n  useEffect(() => {\n    bindSaveKeys();\n  }, []);\n\n  function onSaveSnippet(snippetId) {\n    if (!store.getState().snippets.snippetsList.data) return false;\n    const snippet = store.getState().snippets.snippetsList.data.filter(snippet => snippetId == snippet.id)[0];\n    console.log(snippetId); // props.onClickSaveButton({snippetId, data: {text: snippet.text}});\n  }\n\n  function onChangeEditor(value, snippet) {\n    snippet.text = value;\n  }\n\n  if ((_props$snippets = props.snippets) === null || _props$snippets === void 0 ? void 0 : (_props$snippets$snipp = _props$snippets.snippetsList) === null || _props$snippets$snipp === void 0 ? void 0 : _props$snippets$snipp.data) {\n    const snippet = props.snippets.snippetsList.data.filter(snippet => snippetId == snippet.id)[0];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"editor-area\",\n      className: \"editor__area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AceEditor, {\n      mode: \"javascript\",\n      onChange: value => {\n        onChangeEditor(value, snippet);\n      },\n      theme: \"tomorrow_night\",\n      value: snippet.text || '',\n      name: 'snippet_' + snippet.id,\n      editorProps: {\n        $blockScrolling: true\n      },\n      height: \"100%\",\n      width: \"100%\",\n      tabSize: 2,\n      fontSize: \"16px\",\n      placeholder: \"\\u0412\\u0441\\u0442\\u0430\\u0432\\u0442\\u0435 \\u043A\\u043E\\u0434, \\u043A\\u043E\\u0442\\u043E\\u0440\\u044B\\u0439 \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n      style: {\n        padding: '10px'\n      },\n      setOptions: {\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editor__panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"editor__controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"editor__control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"editor__button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faExpand,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"editor__control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"editor__button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"editor__control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"editor__button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"editor__control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"editor__button\",\n      onClick: () => {\n        props.onClickSaveButton({\n          snippetId,\n          data: {\n            text: snippet.text\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }))))));\n  } else {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nexport default Editor;","map":{"version":3,"sources":["C:/Users/limon/Desktop/my projects/myCode/myCode.React/my_code/src/components/Editor/Editor.jsx"],"names":["React","useState","useEffect","useParams","AceEditor","FontAwesomeIcon","faCopy","faExpand","faTrash","faSave","Loader","store","Editor","props","snippetId","bindSaveKeys","timer","document","addEventListener","e","ctrlKey","keyCode","preventDefault","clearTimeout","setTimeout","onSaveSnippet","bind","getState","snippets","snippetsList","data","snippet","filter","id","console","log","onChangeEditor","value","text","$blockScrolling","padding","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","onClickSaveButton"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,OAA3B,EAAoCC,MAApC,QAAkD,mCAAlD;AACA,OAAO,gDAAP;AACA,OAAO,2CAAP;AAEA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,MAAI;AAAEC,IAAAA;AAAF,MAAgBX,SAAS,EAA7B;;AAEA,WAASY,YAAT,CAAsBD,SAAtB,EAAiC;AAC/B,QAAIE,KAAJ;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAsCC,CAAD,IAAO;AAC1C,UAAIA,CAAC,CAACC,OAAF,IAAaD,CAAC,CAACE,OAAF,IAAa,EAA9B,EAAkC;AAChCF,QAAAA,CAAC,CAACG,cAAF;AACAC,QAAAA,YAAY,CAACP,KAAD,CAAZ;AAEAA,QAAAA,KAAK,GAAGQ,UAAU,CAACC,aAAa,CAACC,IAAd,CAAmB,IAAnB,CAAD,EAA2B,GAA3B,CAAlB;AACD;AACF,KAPD;AAQD;;AAEDxB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAKA,WAASU,aAAT,CAAuBX,SAAvB,EAAkC;AAEhC,QAAI,CAACH,KAAK,CAACgB,QAAN,GAAiBC,QAAjB,CAA0BC,YAA1B,CAAuCC,IAA5C,EACE,OAAO,KAAP;AAIF,UAAMC,OAAO,GAAGpB,KAAK,CAACgB,QAAN,GAAiBC,QAAjB,CAA0BC,YAA1B,CAAuCC,IAAvC,CAA4CE,MAA5C,CAAmDD,OAAO,IAAIjB,SAAS,IAAIiB,OAAO,CAACE,EAAnF,EAAuF,CAAvF,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYrB,SAAZ,EARgC,CAUhC;AACD;;AAID,WAASsB,cAAT,CAAwBC,KAAxB,EAA+BN,OAA/B,EAAwC;AACtCA,IAAAA,OAAO,CAACO,IAAR,GAAeD,KAAf;AACD;;AAED,yBAAIxB,KAAK,CAACe,QAAV,6EAAI,gBAAgBC,YAApB,0DAAI,sBAA8BC,IAAlC,EAAwC;AACtC,UAAOC,OAAO,GAAGlB,KAAK,CAACe,QAAN,CAAeC,YAAf,CAA4BC,IAA5B,CAAiCE,MAAjC,CAAwCD,OAAO,IAAIjB,SAAS,IAAIiB,OAAO,CAACE,EAAxE,EAA4E,CAA5E,CAAjB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,QAAQ,EAAGI,KAAD,IAAW;AAACD,QAAAA,cAAc,CAACC,KAAD,EAAQN,OAAR,CAAd;AAA+B,OAFvD;AAGE,MAAA,KAAK,EAAC,gBAHR;AAIE,MAAA,KAAK,EAAEA,OAAO,CAACO,IAAR,IAAgB,EAJzB;AAKE,MAAA,IAAI,EAAE,aAAaP,OAAO,CAACE,EAL7B;AAME,MAAA,WAAW,EAAE;AAAEM,QAAAA,eAAe,EAAE;AAAnB,OANf;AAOE,MAAA,MAAM,EAAC,MAPT;AAQE,MAAA,KAAK,EAAC,MARR;AASE,MAAA,OAAO,EAAE,CATX;AAUE,MAAA,QAAQ,EAAC,MAVX;AAWE,MAAA,WAAW,EAAC,uMAXd;AAYE,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAZT;AAaE,MAAA,UAAU,EAAE;AACVC,QAAAA,yBAAyB,EAAE,IADjB;AAEVC,QAAAA,wBAAwB,EAAE,IAFhB;AAGVC,QAAAA,cAAc,EAAE;AAHN,OAbd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAsBE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEpC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,eAME;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAED,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CANF,eAWE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEE,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAXF,eAgBE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAE,MAAM;AAAEK,QAAAA,KAAK,CAAC+B,iBAAN,CAAwB;AAAC9B,UAAAA,SAAD;AAAYgB,UAAAA,IAAI,EAAE;AAACQ,YAAAA,IAAI,EAAEP,OAAO,CAACO;AAAf;AAAlB,SAAxB;AAAkE,OAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE7B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAhBF,CADF,CAtBF,CADF;AAiDD,GApDD,MAoDO;AACL,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAEF,CA/FD;;AAiGA,eAAeG,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport AceEditor from \"react-ace\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCopy, faExpand, faTrash, faSave } from '@fortawesome/free-solid-svg-icons'\r\nimport \"ace-builds/src-noconflict/theme-tomorrow_night\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\n\r\nimport './Editor.sass';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport store from '../../store/index';\r\n\r\n\r\nconst Editor = (props) => {\r\n  let { snippetId } = useParams();\r\n\r\n  function bindSaveKeys(snippetId) {\r\n    let timer;\r\n    document.addEventListener('keydown', (e) => {\r\n      if (e.ctrlKey && e.keyCode == 83) {\r\n        e.preventDefault();\r\n        clearTimeout(timer);\r\n\r\n        timer = setTimeout(onSaveSnippet.bind(this), 300);\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    bindSaveKeys();\r\n  }, []);\r\n\r\n\r\n  function onSaveSnippet(snippetId) {\r\n\r\n    if (!store.getState().snippets.snippetsList.data)\r\n      return false;\r\n    \r\n      \r\n\r\n    const snippet = store.getState().snippets.snippetsList.data.filter(snippet => snippetId == snippet.id)[0];\r\n    console.log(snippetId)\r\n    \r\n    // props.onClickSaveButton({snippetId, data: {text: snippet.text}});\r\n  }\r\n\r\n\r\n  \r\n  function onChangeEditor(value, snippet) {\r\n    snippet.text = value;\r\n  }\r\n \r\n  if (props.snippets?.snippetsList?.data) {\r\n    const  snippet = props.snippets.snippetsList.data.filter(snippet => snippetId == snippet.id)[0];\r\n    \r\n    return (\r\n      <div className=\"editor\" >\r\n        <div id=\"editor-area\" className=\"editor__area\">\r\n          <AceEditor\r\n            mode=\"javascript\"\r\n            onChange={(value) => {onChangeEditor(value, snippet)}}\r\n            theme=\"tomorrow_night\"\r\n            value={snippet.text || ''}\r\n            name={'snippet_' + snippet.id}\r\n            editorProps={{ $blockScrolling: true }}\r\n            height='100%'\r\n            width='100%'\r\n            tabSize={2}\r\n            fontSize='16px'\r\n            placeholder='Вставте код, который хотите сохранить'\r\n            style={{padding: '10px'}}\r\n            setOptions={{\r\n              enableBasicAutocompletion: true,\r\n              enableLiveAutocompletion: true,\r\n              enableSnippets: true\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"editor__panel\">\r\n          <ul className=\"editor__controls\">\r\n            <li className=\"editor__control\">\r\n              <button className=\"editor__button\">\r\n                <FontAwesomeIcon icon={faExpand} />\r\n              </button>\r\n            </li>\r\n            <li className=\"editor__control\">\r\n              <button className=\"editor__button\">\r\n                <FontAwesomeIcon icon={faCopy} />\r\n              </button>\r\n            </li>\r\n            <li className=\"editor__control\">\r\n              <button className=\"editor__button\">\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </button>\r\n            </li>\r\n            <li className=\"editor__control\">\r\n              <button className=\"editor__button\" onClick={() => { props.onClickSaveButton({snippetId, data: {text: snippet.text}}) }}>\r\n                <FontAwesomeIcon icon={faSave} />\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Loader />\r\n  }\r\n \r\n};\r\n\r\nexport default Editor;"]},"metadata":{},"sourceType":"module"}